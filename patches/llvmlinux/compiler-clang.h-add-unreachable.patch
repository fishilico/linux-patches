From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Tue, 16 Aug 2016 11:08:43 +0200
Subject: [PATCH] {For LLVMLinux} compiler-clang.h: add unreachable()
 definition

This fixes objtool warnings such as:

   arch/x86/kernel/cpuid.o: warning: objtool: cpuid_smp_cpuid()+0x90:
   function has unreachable instruction

Without this, unreachable() is compiled as "do { } while (1)" (it is its
definition in compiler.h), which is correctly detected as unreachable
instructions by objtool.
---
 include/linux/compiler-clang.h | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/include/linux/compiler-clang.h b/include/linux/compiler-clang.h
index d614c5ea1b5e..3418fd15fb6a 100644
--- a/include/linux/compiler-clang.h
+++ b/include/linux/compiler-clang.h
@@ -23,3 +23,19 @@
  */
 #undef inline
 #define inline inline __attribute__((unused)) notrace
+
+/* Same as gcc, to fix objtool warnings like:
+ * arch/x86/mm/init.o: warning: objtool: update_cache_mode_entry() falls through to next function trace_raw_output_tlb_flush()
+ */
+#ifdef CONFIG_STACK_VALIDATION
+#define annotate_unreachable() ({					\
+	asm("%c0:\t\n"							\
+	    ".pushsection .discard.unreachable\t\n"			\
+	    ".long %c0b - .\t\n"					\
+	    ".popsection\t\n" : : "i" (__LINE__));			\
+})
+#else
+#define annotate_unreachable()
+#endif
+#define unreachable() \
+	do { annotate_unreachable(); __builtin_unreachable(); } while (0)
-- 
