From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sat, 21 Mar 2015 15:59:39 +0800
Subject: [PATCH] {PRAGMA} ignore -Wuninitialized with pragmas

---
 drivers/block/drbd/drbd_receiver.c                       | 3 +++
 drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c | 3 +++
 drivers/net/wimax/i2400m/driver.c                        | 3 +++
 include/linux/completion.h                               | 8 ++++++++
 include/linux/kthread.h                                  | 8 ++++++++
 include/linux/wait.h                                     | 8 ++++++++
 kernel/kthread.c                                         | 6 ++++++
 kernel/workqueue.c                                       | 3 +++
 8 files changed, 42 insertions(+)

diff --git a/drivers/block/drbd/drbd_receiver.c b/drivers/block/drbd/drbd_receiver.c
index 050aaa1c0350..f85cf6705742 100644
--- a/drivers/block/drbd/drbd_receiver.c
+++ b/drivers/block/drbd/drbd_receiver.c
@@ -932,10 +932,13 @@ static int conn_connect(struct drbd_connection *connection)
 	int vnr, timeout, h;
 	bool discard_my_data, ok;
 	enum drbd_state_rv rv;
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct accept_wait_data ad = {
 		.connection = connection,
 		.door_bell = COMPLETION_INITIALIZER_ONSTACK(ad.door_bell),
 	};
+#pragma GCC diagnostic pop
 
 	clear_bit(DISCONNECT_SENT, &connection->flags);
 	if (conn_request_state(connection, NS(conn, C_WF_CONNECTION), CS_VERBOSE) < SS_SUCCESS)
diff --git a/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c b/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
index b9f369c0fb94..c9c1a8576578 100644
--- a/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
+++ b/drivers/media/platform/soc_camera/sh_mobile_ceu_camera.c
@@ -1724,10 +1724,13 @@ static int sh_mobile_ceu_probe(struct platform_device *pdev)
 	void __iomem *base;
 	unsigned int irq;
 	int err, i;
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct bus_wait wait = {
 		.completion = COMPLETION_INITIALIZER_ONSTACK(wait.completion),
 		.notifier.notifier_call = bus_notify,
 	};
+#pragma GCC diagnostic pop
 	struct sh_mobile_ceu_companion *csi2;
 
 	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
diff --git a/drivers/net/wimax/i2400m/driver.c b/drivers/net/wimax/i2400m/driver.c
index 9c78090e72f8..2b7c3e22b7bb 100644
--- a/drivers/net/wimax/i2400m/driver.c
+++ b/drivers/net/wimax/i2400m/driver.c
@@ -180,10 +180,13 @@ int i2400m_op_reset(struct wimax_dev *wimax_dev)
 	int result;
 	struct i2400m *i2400m = wimax_dev_to_i2400m(wimax_dev);
 	struct device *dev = i2400m_dev(i2400m);
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct i2400m_reset_ctx ctx = {
 		.completion = COMPLETION_INITIALIZER_ONSTACK(ctx.completion),
 		.result = 0,
 	};
+#pragma GCC diagnostic pop
 
 	d_fnstart(4, dev, "(wimax_dev %p)\n", wimax_dev);
 	mutex_lock(&i2400m->init_mutex);
diff --git a/include/linux/completion.h b/include/linux/completion.h
index 5d5aaae3af43..507390320013 100644
--- a/include/linux/completion.h
+++ b/include/linux/completion.h
@@ -57,8 +57,16 @@ struct completion {
  * stack.
  */
 #ifdef CONFIG_LOCKDEP
+#ifdef __clang__
+# define DECLARE_COMPLETION_ONSTACK(work) \
+_Pragma("GCC diagnostic push") \
+_Pragma("GCC diagnostic ignored \"-Wuninitialized\"") \
+	struct completion work = COMPLETION_INITIALIZER_ONSTACK(work) \
+_Pragma("GCC diagnostic pop")
+#else
 # define DECLARE_COMPLETION_ONSTACK(work) \
 	struct completion work = COMPLETION_INITIALIZER_ONSTACK(work)
+#endif
 #else
 # define DECLARE_COMPLETION_ONSTACK(work) DECLARE_COMPLETION(work)
 #endif
diff --git a/include/linux/kthread.h b/include/linux/kthread.h
index e691b6a23f72..f4b8aaf019ec 100644
--- a/include/linux/kthread.h
+++ b/include/linux/kthread.h
@@ -100,8 +100,16 @@ struct kthread_work {
 #ifdef CONFIG_LOCKDEP
 # define KTHREAD_WORKER_INIT_ONSTACK(worker)				\
 	({ init_kthread_worker(&worker); worker; })
+#ifdef __clang__
+# define DEFINE_KTHREAD_WORKER_ONSTACK(worker)				\
+_Pragma("GCC diagnostic push") \
+_Pragma("GCC diagnostic ignored \"-Wuninitialized\"") \
+	struct kthread_worker worker = KTHREAD_WORKER_INIT_ONSTACK(worker) \
+_Pragma("GCC diagnostic pop")
+#else
 # define DEFINE_KTHREAD_WORKER_ONSTACK(worker)				\
 	struct kthread_worker worker = KTHREAD_WORKER_INIT_ONSTACK(worker)
+#endif
 #else
 # define DEFINE_KTHREAD_WORKER_ONSTACK(worker) DEFINE_KTHREAD_WORKER(worker)
 #endif
diff --git a/include/linux/wait.h b/include/linux/wait.h
index 27d7a0ab5da3..b8aefee2f32b 100644
--- a/include/linux/wait.h
+++ b/include/linux/wait.h
@@ -81,8 +81,16 @@ extern void __init_waitqueue_head(wait_queue_head_t *q, const char *name, struct
 #ifdef CONFIG_LOCKDEP
 # define __WAIT_QUEUE_HEAD_INIT_ONSTACK(name) \
 	({ init_waitqueue_head(&name); name; })
+#ifdef __clang__
+# define DECLARE_WAIT_QUEUE_HEAD_ONSTACK(name) \
+_Pragma("GCC diagnostic push") \
+_Pragma("GCC diagnostic ignored \"-Wuninitialized\"") \
+	wait_queue_head_t name = __WAIT_QUEUE_HEAD_INIT_ONSTACK(name) \
+_Pragma("GCC diagnostic pop")
+#else
 # define DECLARE_WAIT_QUEUE_HEAD_ONSTACK(name) \
 	wait_queue_head_t name = __WAIT_QUEUE_HEAD_INIT_ONSTACK(name)
+#endif
 #else
 # define DECLARE_WAIT_QUEUE_HEAD_ONSTACK(name) DECLARE_WAIT_QUEUE_HEAD(name)
 #endif
diff --git a/kernel/kthread.c b/kernel/kthread.c
index 9ff173dca1ae..8ae10cccf2a2 100644
--- a/kernel/kthread.c
+++ b/kernel/kthread.c
@@ -659,10 +659,13 @@ static void kthread_flush_work_fn(struct kthread_work *work)
  */
 void flush_kthread_work(struct kthread_work *work)
 {
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct kthread_flush_work fwork = {
 		KTHREAD_WORK_INIT(fwork.work, kthread_flush_work_fn),
 		COMPLETION_INITIALIZER_ONSTACK(fwork.done),
 	};
+#pragma GCC diagnostic pop
 	struct kthread_worker *worker;
 	bool noop = false;
 
@@ -700,10 +703,13 @@ EXPORT_SYMBOL_GPL(flush_kthread_work);
  */
 void flush_kthread_worker(struct kthread_worker *worker)
 {
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct kthread_flush_work fwork = {
 		KTHREAD_WORK_INIT(fwork.work, kthread_flush_work_fn),
 		COMPLETION_INITIALIZER_ONSTACK(fwork.done),
 	};
+#pragma GCC diagnostic pop
 
 	queue_kthread_work(worker, &fwork.work);
 	wait_for_completion(&fwork.done);
diff --git a/kernel/workqueue.c b/kernel/workqueue.c
index 3bfdff06eea7..c49bf8ab6b16 100644
--- a/kernel/workqueue.c
+++ b/kernel/workqueue.c
@@ -2602,11 +2602,14 @@ static bool flush_workqueue_prep_pwqs(struct workqueue_struct *wq,
  */
 void flush_workqueue(struct workqueue_struct *wq)
 {
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wuninitialized"
 	struct wq_flusher this_flusher = {
 		.list = LIST_HEAD_INIT(this_flusher.list),
 		.flush_color = -1,
 		.done = COMPLETION_INITIALIZER_ONSTACK(this_flusher.done),
 	};
+#pragma GCC diagnostic pop
 	int next_color;
 
 	lock_map_acquire(&wq->lockdep_map);
-- 
