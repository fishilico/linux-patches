From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sat, 4 Jul 2015 11:50:02 +0800
Subject: [PATCH] {PRAGMA} ignore -Wsuggest-attribute=format

---
 .../broadcom/brcm80211/brcmfmac/tracepoint.h         |  1 -
 .../net/wireless/intel/iwlwifi/iwl-devtrace-msg.h    |  8 ++++++++
 include/linux/compiler-gcc.h                         |  2 ++
 include/trace/events/qla.h                           |  1 -
 kernel/bpf/helpers.c                                 |  4 ++++
 kernel/panic.c                                       |  4 ++++
 kernel/trace/bpf_trace.c                             | 12 ++++++++++++
 kernel/trace/trace.c                                 |  7 +++++++
 lib/vsprintf.c                                       |  4 ++++
 samples/trace_events/trace-events-sample.h           |  4 ++++
 10 files changed, 45 insertions(+), 2 deletions(-)

diff --git a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/tracepoint.h b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/tracepoint.h
index 5d66e94c806d..488a1bc5c39c 100644
--- a/drivers/net/wireless/broadcom/brcm80211/brcmfmac/tracepoint.h
+++ b/drivers/net/wireless/broadcom/brcm80211/brcmfmac/tracepoint.h
@@ -46,7 +46,6 @@ TRACE_EVENT(brcmf_err,
 	),
 	TP_printk("%s: %s", __get_str(func), __get_str(msg))
 );
-
 TRACE_EVENT(brcmf_dbg,
 	TP_PROTO(u32 level, const char *func, struct va_format *vaf),
 	TP_ARGS(level, func, vaf),
diff --git a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-msg.h b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-msg.h
index 1d6c292cf545..5cfea6cc466c 100644
--- a/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-msg.h
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-devtrace-msg.h
@@ -14,6 +14,9 @@
 
 #define MAX_MSG_LEN	110
 
+__diag_push()
+__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+	      "This function uses a va_format, which is impossible to declare in __printf")
 DECLARE_EVENT_CLASS(iwlwifi_msg_event,
 	TP_PROTO(struct va_format *vaf),
 	TP_ARGS(vaf),
@@ -25,6 +28,7 @@ DECLARE_EVENT_CLASS(iwlwifi_msg_event,
 	),
 	TP_printk("%s", __get_str(msg))
 );
+__diag_pop()
 
 DEFINE_EVENT(iwlwifi_msg_event, iwlwifi_err,
 	TP_PROTO(struct va_format *vaf),
@@ -46,6 +50,9 @@ DEFINE_EVENT(iwlwifi_msg_event, iwlwifi_crit,
 	TP_ARGS(vaf)
 );
 
+__diag_push()
+__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+	      "This function uses a va_format, which is impossible to declare in __printf")
 TRACE_EVENT(iwlwifi_dbg,
 	TP_PROTO(u32 level, const char *function,
 		 struct va_format *vaf),
@@ -62,6 +69,7 @@ TRACE_EVENT(iwlwifi_dbg,
 	),
 	TP_printk("%s", __get_str(msg))
 );
+__diag_pop()
 #endif /* __IWLWIFI_DEVICE_TRACE_MSG */
 
 #undef TRACE_INCLUDE_PATH
diff --git a/include/linux/compiler-gcc.h b/include/linux/compiler-gcc.h
index 7af9e34ec261..4eaa9460c3cf 100644
--- a/include/linux/compiler-gcc.h
+++ b/include/linux/compiler-gcc.h
@@ -131,6 +131,8 @@
 #define __diag_str(s)		__diag_str1(s)
 #define __diag(s)		_Pragma(__diag_str(GCC diagnostic s))
 
+#define __diag_GCC_4(s)		__diag(s)
+
 #if GCC_VERSION >= 80000
 #define __diag_GCC_8(s)		__diag(s)
 #else
diff --git a/include/trace/events/qla.h b/include/trace/events/qla.h
index e7fd55e7dc3d..de05cd5d5dc7 100644
--- a/include/trace/events/qla.h
+++ b/include/trace/events/qla.h
@@ -31,7 +31,6 @@ DECLARE_EVENT_CLASS(qla_log_event,
 
 	TP_printk("%s %s", __get_str(buf), __get_str(msg))
 );
-
 #pragma GCC diagnostic pop
 
 DEFINE_EVENT(qla_log_event, ql_dbg_log,
diff --git a/kernel/bpf/helpers.c b/kernel/bpf/helpers.c
index 9e80efa59a5d..91f496173340 100644
--- a/kernel/bpf/helpers.c
+++ b/kernel/bpf/helpers.c
@@ -1055,7 +1055,11 @@ BPF_CALL_5(bpf_snprintf, char *, str, u32, str_size, char *, fmt,
 	if (err < 0)
 		return err;
 
+	__diag_push()
+	__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+		      "This function is never called directly")
 	err = bstr_printf(str, str_size, fmt, data.bin_args);
+	__diag_pop()
 
 	bpf_bprintf_cleanup(&data);
 
diff --git a/kernel/panic.c b/kernel/panic.c
index 10effe40a3fa..b1ed33a6ebc1 100644
--- a/kernel/panic.c
+++ b/kernel/panic.c
@@ -662,8 +662,12 @@ void __warn(const char *file, int line, void *caller, unsigned taint,
 		pr_warn("WARNING: CPU: %d PID: %d at %pS\n",
 			raw_smp_processor_id(), current->pid, caller);
 
+	__diag_push()
+	__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+		"It is not possible to add __printf attribute to this function")
 	if (args)
 		vprintk(args->fmt, args->args);
+	__diag_pop()
 
 	print_modules();
 
diff --git a/kernel/trace/bpf_trace.c b/kernel/trace/bpf_trace.c
index bd1a42b23f3f..f6e034487c16 100644
--- a/kernel/trace/bpf_trace.c
+++ b/kernel/trace/bpf_trace.c
@@ -387,7 +387,11 @@ BPF_CALL_5(bpf_trace_printk, char *, fmt, u32, fmt_size, u64, arg1,
 	if (ret < 0)
 		return ret;
 
+	__diag_push()
+	__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+		      "This function does not behave like printf even though it calls bstr_printf")
 	ret = bstr_printf(data.buf, MAX_BPRINTF_BUF, fmt, data.bin_args);
+	__diag_pop()
 
 	trace_bpf_trace_printk(data.buf);
 
@@ -424,6 +428,9 @@ const struct bpf_func_proto *bpf_get_trace_printk_proto(void)
 	return &bpf_trace_printk_proto;
 }
 
+__diag_push()
+__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+	"It is not possible to add __printf attribute to this function")
 BPF_CALL_4(bpf_trace_vprintk, char *, fmt, u32, fmt_size, const void *, args,
 	   u32, data_len)
 {
@@ -450,6 +457,7 @@ BPF_CALL_4(bpf_trace_vprintk, char *, fmt, u32, fmt_size, const void *, args,
 
 	return ret;
 }
+__diag_pop()
 
 static const struct bpf_func_proto bpf_trace_vprintk_proto = {
 	.func		= bpf_trace_vprintk,
@@ -484,7 +492,11 @@ BPF_CALL_5(bpf_seq_printf, struct seq_file *, m, char *, fmt, u32, fmt_size,
 	if (err < 0)
 		return err;
 
+	__diag_push()
+	__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+		      "This function does not behave like printf even though it calls seq_bprintf")
 	seq_bprintf(m, fmt, data.bin_args);
+	__diag_pop()
 
 	bpf_bprintf_cleanup(&data);
 
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index b8870078ef58..cf8104b2c1db 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -3898,6 +3898,10 @@ static void test_can_verify(void)
  * warn and print "[UNSAFE MEMORY]" in place of the dereferenced string
  * pointer.
  */
+#ifndef __clang__
+__diag_push()
+__diag(ignored "-Wsuggest-attribute=format")
+#endif
 void trace_check_vprintf(struct trace_iterator *iter, const char *fmt,
 			 va_list ap)
 {
@@ -4030,6 +4034,9 @@ void trace_check_vprintf(struct trace_iterator *iter, const char *fmt,
 	if (*p)
 		trace_seq_vprintf(&iter->seq, p, ap);
 }
+#ifndef __clang__
+__diag_pop()
+#endif
 
 const char *trace_event_format(struct trace_iterator *iter, const char *fmt)
 {
diff --git a/lib/vsprintf.c b/lib/vsprintf.c
index fd90ace5d4d1..8d4d5205d581 100644
--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -1678,7 +1678,11 @@ static char *va_format(char *buf, char *end, struct va_format *va_fmt,
 		return buf;
 
 	va_copy(va, *va_fmt->va);
+	__diag_push()
+	__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+		      "It is not possible to add __printf attribute to this function")
 	buf += vsnprintf(buf, end > buf ? end - buf : 0, va_fmt->fmt, va);
+	__diag_pop()
 	va_end(va);
 
 	return buf;
diff --git a/samples/trace_events/trace-events-sample.h b/samples/trace_events/trace-events-sample.h
index 1c6b843b8c4e..21e76c124a5a 100644
--- a/samples/trace_events/trace-events-sample.h
+++ b/samples/trace_events/trace-events-sample.h
@@ -286,6 +286,9 @@ TRACE_DEFINE_ENUM(TRACE_SAMPLE_FOO);
 TRACE_DEFINE_ENUM(TRACE_SAMPLE_BAR);
 TRACE_DEFINE_ENUM(TRACE_SAMPLE_ZOO);
 
+__diag_push()
+__diag_ignore(GCC, 4, "-Wsuggest-attribute=format",
+	      "It is not possible to add __printf attribute to this function")
 TRACE_EVENT(foo_bar,
 
 	TP_PROTO(const char *foo, int bar, const int *lst,
@@ -362,6 +365,7 @@ TRACE_EVENT(foo_bar,
 		  __get_str(str), __get_bitmask(cpus), __get_cpumask(cpum),
 		  __get_str(vstr))
 );
+__diag_pop()
 
 /*
  * There may be a case where a tracepoint should only be called if
-- 
