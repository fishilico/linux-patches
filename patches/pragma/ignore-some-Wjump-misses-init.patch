From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Wed, 3 Jun 2015 10:57:18 +0800
Subject: [PATCH] {PRAGMA} ignore some -Wjump-misses-init

---
 fs/ext4/ialloc.c    | 8 ++++++++
 mm/mmap.c           | 8 ++++++++
 net/core/skbuff.c   | 8 ++++++++
 net/ipv4/fib_trie.c | 7 +++++++
 net/sched/cls_u32.c | 8 ++++++++
 5 files changed, 39 insertions(+)

diff --git a/fs/ext4/ialloc.c b/fs/ext4/ialloc.c
index f73e5eb43eae..a030d2046c62 100644
--- a/fs/ext4/ialloc.c
+++ b/fs/ext4/ialloc.c
@@ -439,6 +439,11 @@ static int find_group_orlov(struct super_block *sb, struct inode *parent,
 	int flex_size = ext4_flex_bg_size(sbi);
 	struct dx_hash_info hinfo;
 
+/* Variables "ret" and "found_flex_bg" are not initialized but not used when the goto found_flex_bg branch is taken */
+#ifndef __clang__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
+#endif
 	ngroups = real_ngroups;
 	if (flex_size > 1) {
 		ngroups = (real_ngroups + flex_size - 1) >>
@@ -565,6 +570,9 @@ static int find_group_orlov(struct super_block *sb, struct inode *parent,
 	}
 
 	return -1;
+#ifndef __clang__
+#pragma GCC diagnostic pop
+#endif
 }
 
 static int find_group_other(struct super_block *sb, struct inode *parent,
diff --git a/mm/mmap.c b/mm/mmap.c
index 313b57d55a63..6df5b514aa2d 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -752,6 +752,11 @@ int __vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	long adjust_next = 0;
 	int remove_next = 0;
 
+/* Variable "exporter" is not initialized but not used when the goto again branch is taken */
+#ifndef __clang__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
+#endif
 	if (next && !insert) {
 		struct vm_area_struct *exporter = NULL, *importer = NULL;
 
@@ -1022,6 +1027,9 @@ int __vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	validate_mm(mm);
 
 	return 0;
+#ifndef __clang__
+#pragma GCC diagnostic pop
+#endif
 }
 
 /*
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 30b523fa4ad2..2b2e8b7f303e 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -2113,6 +2113,11 @@ int ___pskb_trim(struct sk_buff *skb, unsigned int len)
 	    unlikely((err = pskb_expand_head(skb, 0, 0, GFP_ATOMIC))))
 		return err;
 
+/* Variable "end" is not initialized but not used after the goto drop_pages branch is taken */
+#ifndef __clang__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
+#endif
 	i = 0;
 	if (offset >= len)
 		goto drop_pages;
@@ -2129,6 +2134,9 @@ int ___pskb_trim(struct sk_buff *skb, unsigned int len)
 
 drop_pages:
 		skb_shinfo(skb)->nr_frags = i;
+#ifndef __clang__
+#pragma GCC diagnostic pop
+#endif
 
 		for (; i < nfrags; i++)
 			skb_frag_unref(skb, i);
diff --git a/net/ipv4/fib_trie.c b/net/ipv4/fib_trie.c
index fb0e49c36c2e..471948c434a7 100644
--- a/net/ipv4/fib_trie.c
+++ b/net/ipv4/fib_trie.c
@@ -1462,6 +1462,10 @@ int fib_table_lookup(struct fib_table *tb, const struct flowi4 *flp,
 	this_cpu_inc(stats->gets);
 #endif
 
+#ifndef __clang__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
+#endif
 	/* Step 1: Travel to the longest prefix match in the trie */
 	for (;;) {
 		index = get_cindex(key, n);
@@ -1638,6 +1642,9 @@ int fib_table_lookup(struct fib_table *tb, const struct flowi4 *flp,
 	this_cpu_inc(stats->semantic_match_miss);
 #endif
 	goto backtrace;
+#ifndef __clang__
+#pragma GCC diagnostic pop
+#endif
 }
 EXPORT_SYMBOL_GPL(fib_table_lookup);
 
diff --git a/net/sched/cls_u32.c b/net/sched/cls_u32.c
index 4d27300c287c..739086b48867 100644
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@ -103,6 +103,11 @@ static inline unsigned int u32_hash_fold(__be32 key,
 static int u32_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 			struct tcf_result *res)
 {
+/* Variable "key" is not initialized but not used when the goto check_terminal is taken */
+#ifndef __clang__
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
+#endif
 	struct {
 		struct tc_u_knode *knode;
 		unsigned int	  off;
@@ -249,6 +254,9 @@ static int u32_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 deadloop:
 	net_warn_ratelimited("cls_u32: dead loop\n");
 	return -1;
+#ifndef __clang__
+#pragma GCC diagnostic pop
+#endif
 }
 
 static struct tc_u_hnode *u32_lookup_ht(struct tc_u_common *tp_c, u32 handle)
-- 
