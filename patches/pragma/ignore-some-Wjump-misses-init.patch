From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Wed, 3 Jun 2015 10:57:18 +0800
Subject: [PATCH] {PRAGMA} ignore some -Wjump-misses-init

---
 fs/ext4/ialloc.c      | 4 ++++
 kernel/bpf/verifier.c | 4 ++++
 lib/rhashtable.c      | 4 ++++
 mm/mmap.c             | 4 ++++
 net/core/skbuff.c     | 4 ++++
 net/ipv4/fib_trie.c   | 3 +++
 net/ipv4/tcp_ipv4.c   | 1 +
 net/sched/cls_u32.c   | 4 ++++
 8 files changed, 28 insertions(+)

diff --git a/fs/ext4/ialloc.c b/fs/ext4/ialloc.c
index 170421edfdfe..50b6f7dc7ab0 100644
--- a/fs/ext4/ialloc.c
+++ b/fs/ext4/ialloc.c
@@ -459,6 +459,9 @@ static int find_group_orlov(struct super_block *sb, struct inode *parent,
 	int flex_size = ext4_flex_bg_size(sbi);
 	struct dx_hash_info hinfo;
 
+/* Variables "ret" and "found_flex_bg" are not initialized but not used when the goto found_flex_bg branch is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	ngroups = real_ngroups;
 	if (flex_size > 1) {
 		ngroups = (real_ngroups + flex_size - 1) >>
@@ -586,6 +589,7 @@ static int find_group_orlov(struct super_block *sb, struct inode *parent,
 	}
 
 	return -1;
+#pragma GCC diagnostic pop
 }
 
 static int find_group_other(struct super_block *sb, struct inode *parent,
diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 6a936159c6e0..d370b86d74c5 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -2571,6 +2571,9 @@ static int do_check(struct bpf_verifier_env *env)
 	int insn_processed = 0;
 	bool do_print_state = false;
 
+/* Variable "opcode" is not initialized but not used when the goto process_bpf_exit branch is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	init_reg_state(regs);
 	insn_idx = 0;
 	env->varlen_map_value_access = false;
@@ -2836,6 +2839,7 @@ static int do_check(struct bpf_verifier_env *env)
 
 	verbose("processed %d insns\n", insn_processed);
 	return 0;
+#pragma GCC diagnostic pop
 }
 
 static int check_map_prog_compatibility(struct bpf_map *map,
diff --git a/lib/rhashtable.c b/lib/rhashtable.c
index 32d0ad058380..da07741857a3 100644
--- a/lib/rhashtable.c
+++ b/lib/rhashtable.c
@@ -692,6 +692,9 @@ void *rhashtable_walk_next(struct rhashtable_iter *iter)
 	struct rhash_head *p = iter->p;
 	bool rhlist = ht->rhlist;
 
+/* Variable "skip" is not initialized but not used when the goto is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	if (p) {
 		if (!rhlist || !(list = rcu_dereference(list->next))) {
 			p = rcu_dereference(p->next);
@@ -722,6 +725,7 @@ void *rhashtable_walk_next(struct rhashtable_iter *iter)
 		}
 
 next:
+#pragma GCC diagnostic pop
 		if (!rht_is_a_nulls(p)) {
 			iter->skip++;
 			iter->p = p;
diff --git a/mm/mmap.c b/mm/mmap.c
index 1af87c14183d..3f9370b2a075 100644
--- a/mm/mmap.c
+++ b/mm/mmap.c
@@ -675,6 +675,9 @@ int __vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	long adjust_next = 0;
 	int remove_next = 0;
 
+/* Variable "exporter" is not initialized but not used when the goto again branch is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	if (next && !insert) {
 		struct vm_area_struct *exporter = NULL, *importer = NULL;
 
@@ -948,6 +951,7 @@ int __vma_adjust(struct vm_area_struct *vma, unsigned long start,
 	validate_mm(mm);
 
 	return 0;
+#pragma GCC diagnostic pop
 }
 
 /*
diff --git a/net/core/skbuff.c b/net/core/skbuff.c
index 1e3e0087245b..7c3163849937 100644
--- a/net/core/skbuff.c
+++ b/net/core/skbuff.c
@@ -1506,6 +1506,9 @@ int ___pskb_trim(struct sk_buff *skb, unsigned int len)
 	    unlikely((err = pskb_expand_head(skb, 0, 0, GFP_ATOMIC))))
 		return err;
 
+/* Variable "end" is not initialized but not used after the goto drop_pages branch is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	i = 0;
 	if (offset >= len)
 		goto drop_pages;
@@ -1522,6 +1525,7 @@ int ___pskb_trim(struct sk_buff *skb, unsigned int len)
 
 drop_pages:
 		skb_shinfo(skb)->nr_frags = i;
+#pragma GCC diagnostic pop
 
 		for (; i < nfrags; i++)
 			skb_frag_unref(skb, i);
diff --git a/net/ipv4/fib_trie.c b/net/ipv4/fib_trie.c
index 805f7de59378..1a80b6c334b6 100644
--- a/net/ipv4/fib_trie.c
+++ b/net/ipv4/fib_trie.c
@@ -1321,6 +1321,8 @@ int fib_table_lookup(struct fib_table *tb, const struct flowi4 *flp,
 	this_cpu_inc(stats->gets);
 #endif
 
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	/* Step 1: Travel to the longest prefix match in the trie */
 	for (;;) {
 		index = get_cindex(key, n);
@@ -1484,6 +1486,7 @@ int fib_table_lookup(struct fib_table *tb, const struct flowi4 *flp,
 	this_cpu_inc(stats->semantic_match_miss);
 #endif
 	goto backtrace;
+#pragma GCC diagnostic pop
 }
 EXPORT_SYMBOL_GPL(fib_table_lookup);
 
diff --git a/net/ipv4/tcp_ipv4.c b/net/ipv4/tcp_ipv4.c
index 2259114c7242..7799e4ce6b47 100644
--- a/net/ipv4/tcp_ipv4.c
+++ b/net/ipv4/tcp_ipv4.c
@@ -1925,6 +1925,7 @@ static void *listening_get_next(struct seq_file *seq, void *cur)
 		if (sk->sk_family == st->family)
 			return sk;
 	}
+#pragma GCC diagnostic pop
 	spin_unlock_bh(&ilb->lock);
 	st->offset = 0;
 	if (++st->bucket < INET_LHTABLE_SIZE)
diff --git a/net/sched/cls_u32.c b/net/sched/cls_u32.c
index ae83c3aec308..e4d7fecdfad0 100644
--- a/net/sched/cls_u32.c
+++ b/net/sched/cls_u32.c
@@ -107,6 +107,9 @@ static inline unsigned int u32_hash_fold(__be32 key,
 static int u32_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 			struct tcf_result *res)
 {
+/* Variable "key" is not initialized but not used when the goto check_terminal is taken */
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wjump-misses-init"
 	struct {
 		struct tc_u_knode *knode;
 		unsigned int	  off;
@@ -255,6 +258,7 @@ static int u32_classify(struct sk_buff *skb, const struct tcf_proto *tp,
 deadloop:
 	net_warn_ratelimited("cls_u32: dead loop\n");
 	return -1;
+#pragma GCC diagnostic pop
 }
 
 static struct tc_u_hnode *u32_lookup_ht(struct tc_u_common *tp_c, u32 handle)
-- 
