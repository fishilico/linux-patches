From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sat, 6 Aug 2016 09:48:58 +0200
Subject: [PATCH] {NOT UPSTREAMABLE} Revert "gcc-plugins: disable under
 COMPILE_TEST"

This reverts commit 23667b7f3ce98099a2bf527b0b5e7b6485b698dc.

I am using allyesconfig and allmodconfig to run the plugins against the
whole tree so the plugins need to be selected.

Comment the output of cyc_complexity_plugin so that it does not spam the
build log.
---
 arch/Kconfig                                | 1 -
 lib/Kconfig.debug                           | 4 ++--
 scripts/gcc-plugins/cyc_complexity_plugin.c | 3 ++-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/arch/Kconfig b/arch/Kconfig
index 659bdd079277..b133dbed67c3 100644
--- a/arch/Kconfig
+++ b/arch/Kconfig
@@ -355,7 +355,6 @@ config HAVE_GCC_PLUGINS
 menuconfig GCC_PLUGINS
 	bool "GCC plugins"
 	depends on HAVE_GCC_PLUGINS
-	depends on !COMPILE_TEST
 	help
 	  GCC plugins are loadable modules that provide extra features to the
 	  compiler. They are useful for runtime instrumentation and static analysis.
diff --git a/lib/Kconfig.debug b/lib/Kconfig.debug
index b01e547d4d04..e23bdb7109ab 100644
--- a/lib/Kconfig.debug
+++ b/lib/Kconfig.debug
@@ -710,8 +710,8 @@ config KCOV
 	bool "Code coverage for fuzzing"
 	depends on ARCH_HAS_KCOV
 	select DEBUG_FS
-	select GCC_PLUGINS if !COMPILE_TEST
-	select GCC_PLUGIN_SANCOV if !COMPILE_TEST
+	select GCC_PLUGINS
+	select GCC_PLUGIN_SANCOV
 	help
 	  KCOV exposes kernel code coverage information in a form suitable
 	  for coverage-guided fuzzing (randomized testing).
diff --git a/scripts/gcc-plugins/cyc_complexity_plugin.c b/scripts/gcc-plugins/cyc_complexity_plugin.c
index 8af7db06122d..0e0981d33386 100644
--- a/scripts/gcc-plugins/cyc_complexity_plugin.c
+++ b/scripts/gcc-plugins/cyc_complexity_plugin.c
@@ -36,9 +36,10 @@ static unsigned int cyc_complexity_execute(void)
 	complexity = n_edges_for_fn(cfun) - n_basic_blocks_for_fn(cfun) + 2;
 
 	xloc = expand_location(DECL_SOURCE_LOCATION(current_function_decl));
+/*
 	fprintf(stderr, "Cyclomatic Complexity %d %s:%s\n", complexity,
 		xloc.file, DECL_NAME_POINTER(current_function_decl));
-
+*/
 	return 0;
 }
 
-- 
