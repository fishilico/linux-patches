From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Fri, 22 May 2015 10:55:41 +0800
Subject: [PATCH] {MAYBE UPS} Use %hhu/%hu/%hd correctly to fix clang warnings

---
 drivers/acpi/acpica/nsdump.c                   | 4 ++--
 drivers/acpi/acpica/nsrepair2.c                | 2 +-
 drivers/gpio/gpiolib-acpi.c                    | 2 +-
 drivers/gpu/drm/amd/amdgpu/atombios_dp.c       | 4 ++--
 drivers/gpu/drm/radeon/atombios_dp.c           | 4 ++--
 drivers/hwmon/smsc47m1.c                       | 2 +-
 drivers/media/dvb-frontends/dib0090.c          | 2 +-
 drivers/media/dvb-frontends/dib7000m.c         | 2 +-
 drivers/media/dvb-frontends/dib7000p.c         | 2 +-
 drivers/net/ethernet/mellanox/mlx5/core/wq.c   | 4 ++--
 drivers/net/ethernet/qlogic/qed/qed_main.c     | 2 +-
 drivers/platform/x86/thinkpad_acpi.c           | 2 +-
 drivers/rtc/rtc-sunplus.c                      | 4 ++--
 drivers/scsi/scsi_sysfs.c                      | 2 +-
 drivers/target/iscsi/iscsi_target_parameters.c | 2 +-
 drivers/w1/slaves/w1_therm.c                   | 2 +-
 fs/afs/flock.c                                 | 2 +-
 fs/ntfs/attrib.c                               | 2 +-
 fs/reiserfs/journal.c                          | 2 +-
 net/netfilter/xt_CONNSECMARK.c                 | 2 +-
 net/netfilter/xt_SECMARK.c                     | 4 ++--
 security/tomoyo/common.c                       | 2 +-
 22 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/drivers/acpi/acpica/nsdump.c b/drivers/acpi/acpica/nsdump.c
index f154824d4eb6..6a3530d2764b 100644
--- a/drivers/acpi/acpica/nsdump.c
+++ b/drivers/acpi/acpica/nsdump.c
@@ -291,7 +291,7 @@ acpi_ns_dump_one_object(acpi_handle obj_handle,
 					for (i = 0;
 					     (i < obj_desc->buffer.length
 					      && i < 12); i++) {
-						acpi_os_printf(" %2.2X",
+						acpi_os_printf(" %2.2hhX",
 							       obj_desc->buffer.
 							       pointer[i]);
 					}
@@ -404,7 +404,7 @@ acpi_ns_dump_one_object(acpi_handle obj_handle,
 		case ACPI_TYPE_LOCAL_BANK_FIELD:
 		case ACPI_TYPE_LOCAL_INDEX_FIELD:
 
-			acpi_os_printf(" Off %.3X Len %.2X Acc %.2X\n",
+			acpi_os_printf(" Off %.3X Len %.2X Acc %.2hhX\n",
 				       (obj_desc->common_field.
 					base_byte_offset * 8)
 				       +
diff --git a/drivers/acpi/acpica/nsrepair2.c b/drivers/acpi/acpica/nsrepair2.c
index c327b4e10549..dd533c887e3a 100644
--- a/drivers/acpi/acpica/nsrepair2.c
+++ b/drivers/acpi/acpica/nsrepair2.c
@@ -273,7 +273,7 @@ acpi_ns_repair_FDE(struct acpi_evaluate_info *info,
 			ACPI_WARN_PREDEFINED((AE_INFO,
 					      info->full_pathname,
 					      info->node_flags,
-					      "Incorrect return buffer length %u, expected %zu",
+					      "Incorrect return buffer length %u, expected %u",
 					      return_object->buffer.length,
 					      ACPI_FDE_DWORD_BUFFER_SIZE));
 
diff --git a/drivers/gpio/gpiolib-acpi.c b/drivers/gpio/gpiolib-acpi.c
index a7d2358736fe..2d1110df5bbd 100644
--- a/drivers/gpio/gpiolib-acpi.c
+++ b/drivers/gpio/gpiolib-acpi.c
@@ -400,7 +400,7 @@ static acpi_status acpi_gpiochip_alloc_event(struct acpi_resource *ares,
 		char ev_name[8];
 		sprintf(ev_name, "_%c%02X",
 			agpio->triggering == ACPI_EDGE_SENSITIVE ? 'E' : 'L',
-			pin);
+			(u8)pin);
 		if (ACPI_SUCCESS(acpi_get_handle(handle, ev_name, &evt_handle)))
 			handler = acpi_gpio_irq_handler;
 	}
diff --git a/drivers/gpu/drm/amd/amdgpu/atombios_dp.c b/drivers/gpu/drm/amd/amdgpu/atombios_dp.c
index 87c41e0e9b7c..f712461a4776 100644
--- a/drivers/gpu/drm/amd/amdgpu/atombios_dp.c
+++ b/drivers/gpu/drm/amd/amdgpu/atombios_dp.c
@@ -323,11 +323,11 @@ static void amdgpu_atombios_dp_probe_oui(struct amdgpu_connector *amdgpu_connect
 		return;
 
 	if (drm_dp_dpcd_read(&amdgpu_connector->ddc_bus->aux, DP_SINK_OUI, buf, 3) == 3)
-		DRM_DEBUG_KMS("Sink OUI: %02hx%02hx%02hx\n",
+		DRM_DEBUG_KMS("Sink OUI: %02hhx%02hhx%02hhx\n",
 			      buf[0], buf[1], buf[2]);
 
 	if (drm_dp_dpcd_read(&amdgpu_connector->ddc_bus->aux, DP_BRANCH_OUI, buf, 3) == 3)
-		DRM_DEBUG_KMS("Branch OUI: %02hx%02hx%02hx\n",
+		DRM_DEBUG_KMS("Branch OUI: %02hhx%02hhx%02hhx\n",
 			      buf[0], buf[1], buf[2]);
 }
 
diff --git a/drivers/gpu/drm/radeon/atombios_dp.c b/drivers/gpu/drm/radeon/atombios_dp.c
index 009333645438..d53b359e1b03 100644
--- a/drivers/gpu/drm/radeon/atombios_dp.c
+++ b/drivers/gpu/drm/radeon/atombios_dp.c
@@ -376,11 +376,11 @@ static void radeon_dp_probe_oui(struct radeon_connector *radeon_connector)
 		return;
 
 	if (drm_dp_dpcd_read(&radeon_connector->ddc_bus->aux, DP_SINK_OUI, buf, 3) == 3)
-		DRM_DEBUG_KMS("Sink OUI: %02hx%02hx%02hx\n",
+		DRM_DEBUG_KMS("Sink OUI: %02hhx%02hhx%02hhx\n",
 			      buf[0], buf[1], buf[2]);
 
 	if (drm_dp_dpcd_read(&radeon_connector->ddc_bus->aux, DP_BRANCH_OUI, buf, 3) == 3)
-		DRM_DEBUG_KMS("Branch OUI: %02hx%02hx%02hx\n",
+		DRM_DEBUG_KMS("Branch OUI: %02hhx%02hhx%02hhx\n",
 			      buf[0], buf[1], buf[2]);
 }
 
diff --git a/drivers/hwmon/smsc47m1.c b/drivers/hwmon/smsc47m1.c
index 37531b5c8254..cb65e41f0b68 100644
--- a/drivers/hwmon/smsc47m1.c
+++ b/drivers/hwmon/smsc47m1.c
@@ -682,7 +682,7 @@ static int __init smsc47m1_handle_resources(unsigned short address,
 			/* Request the resources */
 			if (!devm_request_region(dev, start, len, DRVNAME)) {
 				dev_err(dev,
-					"Region 0x%x-0x%x already in use!\n",
+					"Region 0x%hx-0x%x already in use!\n",
 					start, start + len);
 				return -EBUSY;
 			}
diff --git a/drivers/media/dvb-frontends/dib0090.c b/drivers/media/dvb-frontends/dib0090.c
index 903da33642df..36dd53e10c2f 100644
--- a/drivers/media/dvb-frontends/dib0090.c
+++ b/drivers/media/dvb-frontends/dib0090.c
@@ -1748,7 +1748,7 @@ static int dib0090_dc_offset_calibration(struct dib0090_state *state, enum front
 			}
 
 			dib0090_set_trim(state);
-			dprintk("BB Offset Cal, BBreg=%u,Offset=%d,Value Set=%d\n",
+			dprintk("BB Offset Cal, BBreg=%hhu,Offset=%hd,Value Set=%hhd\n",
 				state->dc->addr, state->adc_diff, state->step);
 
 			state->dc++;
diff --git a/drivers/media/dvb-frontends/dib7000m.c b/drivers/media/dvb-frontends/dib7000m.c
index 97ce97789c9e..1d8c2644e998 100644
--- a/drivers/media/dvb-frontends/dib7000m.c
+++ b/drivers/media/dvb-frontends/dib7000m.c
@@ -808,7 +808,7 @@ static int dib7000m_agc_startup(struct dvb_frontend *demod)
 
 			dib7000m_restart_agc(state);
 
-			dprintk("SPLIT %p: %u\n", demod, agc_split);
+			dprintk("SPLIT %p: %hhu\n", demod, agc_split);
 
 			(*agc_state)++;
 			ret = 5;
diff --git a/drivers/media/dvb-frontends/dib7000p.c b/drivers/media/dvb-frontends/dib7000p.c
index a90d2f51868f..f73c1bd7f85b 100644
--- a/drivers/media/dvb-frontends/dib7000p.c
+++ b/drivers/media/dvb-frontends/dib7000p.c
@@ -915,7 +915,7 @@ static int dib7000p_agc_startup(struct dvb_frontend *demod)
 
 		dib7000p_restart_agc(state);
 
-		dprintk("SPLIT %p: %u\n", demod, agc_split);
+		dprintk("SPLIT %p: %hhu\n", demod, agc_split);
 
 		(*agc_state)++;
 		ret = 5;
diff --git a/drivers/net/ethernet/mellanox/mlx5/core/wq.c b/drivers/net/ethernet/mellanox/mlx5/core/wq.c
index 3091dd014650..26682040a0c5 100644
--- a/drivers/net/ethernet/mellanox/mlx5/core/wq.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/wq.c
@@ -84,8 +84,8 @@ void mlx5_wq_cyc_wqe_dump(struct mlx5_wq_cyc *wq, u16 ix, u8 nstrides)
 	len = nstrides << wq->fbc.log_stride;
 	wqe = mlx5_wq_cyc_get_wqe(wq, ix);
 
-	pr_info("WQE DUMP: WQ size %d WQ cur size %d, WQE index 0x%x, len: %zu\n",
-		mlx5_wq_cyc_get_size(wq), wq->cur_sz, ix, len);
+	pr_info("WQE DUMP: WQ size %d WQ cur size %d, WQE index 0x%x, len: %lu\n",
+		mlx5_wq_cyc_get_size(wq), wq->cur_sz, ix, (unsigned long)len);
 	print_hex_dump(KERN_WARNING, "", DUMP_PREFIX_OFFSET, 16, 1, wqe, len, false);
 }
 
diff --git a/drivers/net/ethernet/qlogic/qed/qed_main.c b/drivers/net/ethernet/qlogic/qed/qed_main.c
index c91898be7c03..2c64d3461b06 100644
--- a/drivers/net/ethernet/qlogic/qed/qed_main.c
+++ b/drivers/net/ethernet/qlogic/qed/qed_main.c
@@ -948,7 +948,7 @@ static int qed_slowpath_setup_int(struct qed_dev *cdev,
 
 	if (is_kdump_kernel()) {
 		DP_INFO(cdev,
-			"Kdump kernel: Limit the max number of requested MSI-X vectors to %hd\n",
+			"Kdump kernel: Limit the max number of requested MSI-X vectors to %hhu\n",
 			cdev->int_params.in.min_msix_cnt);
 		cdev->int_params.in.num_vectors =
 			cdev->int_params.in.min_msix_cnt;
diff --git a/drivers/platform/x86/thinkpad_acpi.c b/drivers/platform/x86/thinkpad_acpi.c
index 20e5c043a8e8..1c3225d2ebe1 100644
--- a/drivers/platform/x86/thinkpad_acpi.c
+++ b/drivers/platform/x86/thinkpad_acpi.c
@@ -7475,7 +7475,7 @@ static void volume_exit_software_mute(void)
 static int volume_alsa_set_volume(const u8 vol)
 {
 	dbg_printk(TPACPI_DBG_MIXER,
-		   "ALSA: trying to set volume level to %hu\n", vol);
+		   "ALSA: trying to set volume level to %hhu\n", vol);
 	return __volume_set_volume_ec(vol);
 }
 
diff --git a/drivers/rtc/rtc-sunplus.c b/drivers/rtc/rtc-sunplus.c
index e8e2ab1103fc..eaaef96738cd 100644
--- a/drivers/rtc/rtc-sunplus.c
+++ b/drivers/rtc/rtc-sunplus.c
@@ -240,8 +240,8 @@ static int sp_rtc_probe(struct platform_device *plat_dev)
 	if (IS_ERR(sp_rtc->reg_base))
 		return dev_err_probe(&plat_dev->dev, PTR_ERR(sp_rtc->reg_base),
 					    "%s devm_ioremap_resource fail\n", RTC_REG_NAME);
-	dev_dbg(&plat_dev->dev, "res = 0x%x, reg_base = 0x%lx\n",
-		sp_rtc->res->start, (unsigned long)sp_rtc->reg_base);
+	dev_dbg(&plat_dev->dev, "res = 0x%lx, reg_base = 0x%lx\n",
+		(unsigned long)sp_rtc->res->start, (unsigned long)sp_rtc->reg_base);
 
 	sp_rtc->irq = platform_get_irq(plat_dev, 0);
 	if (sp_rtc->irq < 0)
diff --git a/drivers/scsi/scsi_sysfs.c b/drivers/scsi/scsi_sysfs.c
index cac7c902cf70..52057eeb2760 100644
--- a/drivers/scsi/scsi_sysfs.c
+++ b/drivers/scsi/scsi_sysfs.c
@@ -375,7 +375,7 @@ shost_rd_attr(can_queue, "%d\n");
 shost_rd_attr(sg_tablesize, "%hu\n");
 shost_rd_attr(sg_prot_tablesize, "%hu\n");
 shost_rd_attr(prot_capabilities, "%u\n");
-shost_rd_attr(prot_guard_type, "%hd\n");
+shost_rd_attr(prot_guard_type, "%hhu\n");
 shost_rd_attr2(proc_name, hostt->proc_name, "%s\n");
 
 static ssize_t
diff --git a/drivers/target/iscsi/iscsi_target_parameters.c b/drivers/target/iscsi/iscsi_target_parameters.c
index 2317fb077db0..cf5b992881ac 100644
--- a/drivers/target/iscsi/iscsi_target_parameters.c
+++ b/drivers/target/iscsi/iscsi_target_parameters.c
@@ -101,7 +101,7 @@ void iscsi_dump_sess_ops(struct iscsi_sess_ops *sess_ops)
 			(sess_ops->DataPDUInOrder) ? "Yes" : "No");
 	pr_debug("DataSequenceInOrder: %s\n",
 			(sess_ops->DataSequenceInOrder) ? "Yes" : "No");
-	pr_debug("ErrorRecoveryLevel: %hu\n",
+	pr_debug("ErrorRecoveryLevel: %hhu\n",
 			sess_ops->ErrorRecoveryLevel);
 	pr_debug("SessionType: %s\n", (sess_ops->SessionType) ?
 			"Discovery" : "Normal");
diff --git a/drivers/w1/slaves/w1_therm.c b/drivers/w1/slaves/w1_therm.c
index 067692626cf0..2493214f6b0c 100644
--- a/drivers/w1/slaves/w1_therm.c
+++ b/drivers/w1/slaves/w1_therm.c
@@ -1840,7 +1840,7 @@ static ssize_t alarms_show(struct device *device,
 			__func__, ret);
 	}
 
-	return sprintf(buf, "%hd %hd\n", tl, th);
+	return sprintf(buf, "%hhd %hhd\n", tl, th);
 }
 
 static ssize_t alarms_store(struct device *device,
diff --git a/fs/afs/flock.c b/fs/afs/flock.c
index bbcc5afd1576..ea9b0acfaa57 100644
--- a/fs/afs/flock.c
+++ b/fs/afs/flock.c
@@ -754,7 +754,7 @@ static int afs_do_getlk(struct file *file, struct file_lock *fl)
 
 	ret = 0;
 error:
-	_leave(" = %d [%hd]", ret, fl->fl_type);
+	_leave(" = %d [%hhu]", ret, fl->fl_type);
 	return ret;
 }
 
diff --git a/fs/ntfs/attrib.c b/fs/ntfs/attrib.c
index a3865bc4a0c6..d18e2aae8dc6 100644
--- a/fs/ntfs/attrib.c
+++ b/fs/ntfs/attrib.c
@@ -2509,7 +2509,7 @@ int ntfs_attr_set(ntfs_inode *ni, const s64 ofs, const s64 cnt, const u8 val)
 	pgoff_t idx, end;
 	unsigned start_ofs, end_ofs, size;
 
-	ntfs_debug("Entering for ofs 0x%llx, cnt 0x%llx, val 0x%hx.",
+	ntfs_debug("Entering for ofs 0x%llx, cnt 0x%llx, val 0x%hhx.",
 			(long long)ofs, (long long)cnt, val);
 	BUG_ON(ofs < 0);
 	BUG_ON(cnt < 0);
diff --git a/fs/reiserfs/journal.c b/fs/reiserfs/journal.c
index 9f62da7471c9..ac62ffc3d166 100644
--- a/fs/reiserfs/journal.c
+++ b/fs/reiserfs/journal.c
@@ -2546,7 +2546,7 @@ static int journal_read(struct super_block *sb)
 	journal->j_first_unflushed_offset = journal->j_start;
 	if (replay_count > 0) {
 		reiserfs_info(sb,
-			      "replayed %d transactions in %lu seconds\n",
+			      "replayed %d transactions in %llu seconds\n",
 			      replay_count, ktime_get_seconds() - start);
 	}
 	/* needed to satisfy the locking in _update_journal_header_block */
diff --git a/net/netfilter/xt_CONNSECMARK.c b/net/netfilter/xt_CONNSECMARK.c
index 76acecf3e757..5bbf78e7c9f6 100644
--- a/net/netfilter/xt_CONNSECMARK.c
+++ b/net/netfilter/xt_CONNSECMARK.c
@@ -98,7 +98,7 @@ static int connsecmark_tg_check(const struct xt_tgchk_param *par)
 		break;
 
 	default:
-		pr_info_ratelimited("invalid mode: %hu\n", info->mode);
+		pr_info_ratelimited("invalid mode: %hhu\n", info->mode);
 		return -EINVAL;
 	}
 
diff --git a/net/netfilter/xt_SECMARK.c b/net/netfilter/xt_SECMARK.c
index 498a0bf6f044..43d7701d0dc5 100644
--- a/net/netfilter/xt_SECMARK.c
+++ b/net/netfilter/xt_SECMARK.c
@@ -85,7 +85,7 @@ secmark_tg_check(const char *table, struct xt_secmark_target_info_v1 *info)
 	}
 
 	if (mode && mode != info->mode) {
-		pr_info_ratelimited("mode already set to %hu cannot mix with rules for mode %hu\n",
+		pr_info_ratelimited("mode already set to %hhu cannot mix with rules for mode %hhu\n",
 				    mode, info->mode);
 		return -EINVAL;
 	}
@@ -94,7 +94,7 @@ secmark_tg_check(const char *table, struct xt_secmark_target_info_v1 *info)
 	case SECMARK_MODE_SEL:
 		break;
 	default:
-		pr_info_ratelimited("invalid mode: %hu\n", info->mode);
+		pr_info_ratelimited("invalid mode: %hhu\n", info->mode);
 		return -EINVAL;
 	}
 
diff --git a/security/tomoyo/common.c b/security/tomoyo/common.c
index c322ac3fa4e7..b11d53cf79a4 100644
--- a/security/tomoyo/common.c
+++ b/security/tomoyo/common.c
@@ -2231,7 +2231,7 @@ static void tomoyo_read_query(struct tomoyo_io_buffer *head)
 		 * can change, but I don't care.
 		 */
 		if (len == ptr->query_len)
-			snprintf(buf, len + 31, "Q%u-%hu\n%s", ptr->serial,
+			snprintf(buf, len + 31, "Q%u-%hhu\n%s", ptr->serial,
 				 ptr->retry, ptr->query);
 		break;
 	}
-- 
