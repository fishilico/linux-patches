From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Thu, 21 May 2015 12:39:38 +0800
Subject: [PATCH] {MAYBE UPS} x86/paravirt: replace self-assignment with
 uninitialized_var macro

Use uninitialized_var() macro to define uninitialized variables to fix a
clang warning about variables possible unused.

In a yet-to-be-sent LLVMLinux patch, uninitialized_var is defined for
clang as:
    #define uninitialized_var(x) x = *(&(x))
---
 arch/x86/include/asm/paravirt_types.h | 25 ++++++++++++++++++++++---
 1 file changed, 22 insertions(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h
index fe0cbc563beb..2c7b40023380 100644
--- a/arch/x86/include/asm/paravirt_types.h
+++ b/arch/x86/include/asm/paravirt_types.h
@@ -414,8 +414,19 @@ int paravirt_disable_iospace(void);
  * makes sure the incoming and outgoing types are always correct.
  */
 #ifdef CONFIG_X86_32
+
+/* Linux 5.9 remove uninitialized_var macro:
+ * https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=63a0895d960aa3d3653ef0ecad5bd8579388f14b
+ */
+#ifdef __clang__
+#define PVOP_VCALL_ARGS							\
+	unsigned long __eax = *(&__eax), __edx = *(&__edx), \
+		__ecx = *(&__ecx)
+#else
 #define PVOP_VCALL_ARGS							\
-	unsigned long __eax = __eax, __edx = __edx, __ecx = __ecx;
+	unsigned long __eax = __eax, __edx = __edx, \
+		__ecx = __ecx
+#endif
 
 #define PVOP_CALL_ARGS			PVOP_VCALL_ARGS
 
@@ -434,9 +445,17 @@ int paravirt_disable_iospace(void);
 #define VEXTRA_CLOBBERS
 #else  /* CONFIG_X86_64 */
 /* [re]ax isn't an arg, but the return val */
+#ifdef __clang__
+#define PVOP_VCALL_ARGS						\
+	unsigned long __edi = *(&__edi), __esi = *(&__esi), \
+		__edx = *(&__edx), __ecx = *(&__ecx), \
+		__eax = *(&__eax)
+#else
 #define PVOP_VCALL_ARGS						\
-	unsigned long __edi = __edi, __esi = __esi,		\
-		__edx = __edx, __ecx = __ecx, __eax = __eax;
+	unsigned long __edi = __edi, __esi = __esi, \
+		__edx = __edx, __ecx = __ecx, \
+		__eax = __eax
+#endif
 
 #define PVOP_CALL_ARGS		PVOP_VCALL_ARGS
 
-- 
