From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Thu, 21 May 2015 12:39:38 +0800
Subject: [PATCH] {MAYBE UPS} x86/paravirt: replace self-assignment with
 uninitialized_var macro

Use uninitialized_var() macro to define uninitialized variables to fix a
clang warning about variables possible unused.

In a yet-to-be-sent LLVMLinux patch, uninitialized_var is defined for
clang as:
    #define uninitialized_var(x) x = *(&(x))
---
 arch/x86/include/asm/paravirt_types.h | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/arch/x86/include/asm/paravirt_types.h b/arch/x86/include/asm/paravirt_types.h
index db04b2283fb3..904b11b23680 100644
--- a/arch/x86/include/asm/paravirt_types.h
+++ b/arch/x86/include/asm/paravirt_types.h
@@ -466,8 +466,9 @@ int paravirt_disable_iospace(void);
  * makes sure the incoming and outgoing types are always correct.
  */
 #ifdef CONFIG_X86_32
-#define PVOP_VCALL_ARGS							\
-	unsigned long __eax = __eax, __edx = __edx, __ecx = __ecx;	\
+#define PVOP_VCALL_ARGS				\
+	unsigned long uninitialized_var(__eax), uninitialized_var(__edx), \
+		uninitialized_var(__ecx);	\
 	register void *__sp asm("esp")
 #define PVOP_CALL_ARGS			PVOP_VCALL_ARGS
 
@@ -486,9 +487,10 @@ int paravirt_disable_iospace(void);
 #define VEXTRA_CLOBBERS
 #else  /* CONFIG_X86_64 */
 /* [re]ax isn't an arg, but the return val */
-#define PVOP_VCALL_ARGS						\
-	unsigned long __edi = __edi, __esi = __esi,		\
-		__edx = __edx, __ecx = __ecx, __eax = __eax;	\
+#define PVOP_VCALL_ARGS					\
+	unsigned long uninitialized_var(__edi), uninitialized_var(__esi), \
+		uninitialized_var(__edx), uninitialized_var(__ecx), \
+		uninitialized_var(__eax);    \
 	register void *__sp asm("rsp")
 #define PVOP_CALL_ARGS		PVOP_VCALL_ARGS
 
-- 
