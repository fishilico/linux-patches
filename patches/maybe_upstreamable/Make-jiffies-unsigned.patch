From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Tue, 17 Mar 2015 20:43:16 +0800
Subject: [PATCH] {MAYBE UPS} Make jiffies unsigned
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Frama-C complains about an integer overflow occurring because of the
implicit cast to signed long.

kernel/time/jiffies.c:67:[kernel] warning: signed overflow.
assert (long)((long)(1000000000L+(long)((int)(100/2)))/(long)100)<<8 â‰¤ 2147483647;
kernel/time/jiffies.c:72:[value] Evaluation of initializer
'(unsigned int)((1000000000L + (long)(100 / 2)) / (long)100 << 8)' failed

To understand how "NSEC_PER_JIFFY << JIFFIES_SHIFT" is expanded to the
reported expression, here are some definitions for an x86 build:

#define HZ 100
#define NSEC_PER_SEC    1000000000L
#define NSEC_PER_JIFFY  ((NSEC_PER_SEC+HZ/2)/HZ)
#define JIFFIES_SHIFT   8

Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
---
 kernel/time/jiffies.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/time/jiffies.c b/kernel/time/jiffies.c
index 347fecf86a3f..8ce3fdaba49f 100644
--- a/kernel/time/jiffies.c
+++ b/kernel/time/jiffies.c
@@ -37,7 +37,7 @@
  * requested HZ value. It is also not recommended
  * for "tick-less" systems.
  */
-#define NSEC_PER_JIFFY	((NSEC_PER_SEC+HZ/2)/HZ)
+#define NSEC_PER_JIFFY	((u32)((NSEC_PER_SEC+HZ/2)/HZ))
 
 /* Since jiffies uses a simple NSEC_PER_JIFFY multiplier
  * conversion, the .shift value could be zero. However
-- 
