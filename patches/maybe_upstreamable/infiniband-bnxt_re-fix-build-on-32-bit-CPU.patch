From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Mon, 5 Feb 2018 21:29:38 +0100
Subject: [PATCH] {MAYBE UPS} infiniband: bnxt_re: fix build on 32-bit CPU

gcc x86_32 complains about 32-bit pointers casted from/to 64-bit
integers (-Wint-to-pointer-cast and -Wpointer-to-int-cast) and about
over-sized left shifts (-Wshift-count-overflow).
---
 drivers/infiniband/hw/bnxt_re/qplib_fp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/drivers/infiniband/hw/bnxt_re/qplib_fp.c b/drivers/infiniband/hw/bnxt_re/qplib_fp.c
index 50d8f1fc98d5..a383539613d3 100644
--- a/drivers/infiniband/hw/bnxt_re/qplib_fp.c
+++ b/drivers/infiniband/hw/bnxt_re/qplib_fp.c
@@ -290,10 +290,10 @@ static void bnxt_qplib_service_nq(unsigned long data)
 			q_handle = le32_to_cpu(nqsrqe->srq_handle_low);
 			q_handle |= (u64)le32_to_cpu(nqsrqe->srq_handle_high)
 				     << 32;
-			bnxt_qplib_arm_srq((struct bnxt_qplib_srq *)q_handle,
+			bnxt_qplib_arm_srq((struct bnxt_qplib_srq *)(uintptr_t)q_handle,
 					   DBR_DBR_TYPE_SRQ_ARMENA);
 			if (!nq->srqn_handler(nq,
-					      (struct bnxt_qplib_srq *)q_handle,
+					      (struct bnxt_qplib_srq *)(uintptr_t)q_handle,
 					      nqsrqe->event))
 				num_srqne_processed++;
 			else
-- 
