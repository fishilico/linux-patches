From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Tue, 17 Mar 2015 20:43:16 +0800
Subject: [PATCH] {MAYBE UPS} Remove return statement in void functions

Frama-C warning:

  [kernel] warning: Return statement with a value in function returning void

Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
---
 drivers/base/cacheinfo.c    | 2 +-
 drivers/base/class.c        | 2 +-
 fs/fs-writeback.c           | 2 +-
 include/asm-generic/tlb.h   | 2 +-
 include/linux/clockchips.h  | 2 +-
 include/linux/crypto.h      | 2 +-
 include/linux/device.h      | 4 ++--
 include/linux/dma-mapping.h | 4 ++--
 include/linux/pm_wakeup.h   | 6 +++---
 include/linux/ratelimit.h   | 2 +-
 include/linux/rhashtable.h  | 6 +++---
 include/linux/timekeeping.h | 2 +-
 lib/rhashtable.c            | 2 +-
 mm/page_alloc.c             | 4 ++--
 14 files changed, 21 insertions(+), 21 deletions(-)

diff --git a/drivers/base/cacheinfo.c b/drivers/base/cacheinfo.c
index eb3af2739537..6ae29caa5617 100644
--- a/drivers/base/cacheinfo.c
+++ b/drivers/base/cacheinfo.c
@@ -287,7 +287,7 @@ static void cache_shared_cpu_map_remove(unsigned int cpu)
 static void cache_override_properties(unsigned int cpu)
 {
 	if (of_have_populated_dt())
-		return cache_of_override_properties(cpu);
+		cache_of_override_properties(cpu);
 }
 
 static void free_cache_attributes(unsigned int cpu)
diff --git a/drivers/base/class.c b/drivers/base/class.c
index 52eb8e644acd..490a57853d0a 100644
--- a/drivers/base/class.c
+++ b/drivers/base/class.c
@@ -142,7 +142,7 @@ static int class_add_groups(struct class *cls,
 static void class_remove_groups(struct class *cls,
 				const struct attribute_group **groups)
 {
-	return sysfs_remove_groups(&cls->p->subsys.kobj, groups);
+	sysfs_remove_groups(&cls->p->subsys.kobj, groups);
 }
 
 int __class_register(struct class *cls, struct lock_class_key *key)
diff --git a/fs/fs-writeback.c b/fs/fs-writeback.c
index 245c430a2e41..be3fd10d4af6 100644
--- a/fs/fs-writeback.c
+++ b/fs/fs-writeback.c
@@ -2338,7 +2338,7 @@ EXPORT_SYMBOL(writeback_inodes_sb_nr);
  */
 void writeback_inodes_sb(struct super_block *sb, enum wb_reason reason)
 {
-	return writeback_inodes_sb_nr(sb, get_nr_dirty_pages(), reason);
+	writeback_inodes_sb_nr(sb, get_nr_dirty_pages(), reason);
 }
 EXPORT_SYMBOL(writeback_inodes_sb);
 
diff --git a/include/asm-generic/tlb.h b/include/asm-generic/tlb.h
index faddde44de8c..d10858f550fb 100644
--- a/include/asm-generic/tlb.h
+++ b/include/asm-generic/tlb.h
@@ -156,7 +156,7 @@ static inline bool __tlb_remove_page(struct mmu_gather *tlb, struct page *page)
  */
 static inline void tlb_remove_page(struct mmu_gather *tlb, struct page *page)
 {
-	return tlb_remove_page_size(tlb, page, PAGE_SIZE);
+	tlb_remove_page_size(tlb, page, PAGE_SIZE);
 }
 
 #ifndef tlb_remove_check_page_size_change
diff --git a/include/linux/clockchips.h b/include/linux/clockchips.h
index 8ae9a95ebf5b..024154a86c8c 100644
--- a/include/linux/clockchips.h
+++ b/include/linux/clockchips.h
@@ -192,7 +192,7 @@ extern int clockevents_update_freq(struct clock_event_device *ce, u32 freq);
 static inline void
 clockevents_calc_mult_shift(struct clock_event_device *ce, u32 freq, u32 maxsec)
 {
-	return clocks_calc_mult_shift(&ce->mult, &ce->shift, NSEC_PER_SEC, freq, maxsec);
+	clocks_calc_mult_shift(&ce->mult, &ce->shift, NSEC_PER_SEC, freq, maxsec);
 }
 
 extern void clockevents_suspend(void);
diff --git a/include/linux/crypto.h b/include/linux/crypto.h
index 84da9978e951..8a8985b362bd 100644
--- a/include/linux/crypto.h
+++ b/include/linux/crypto.h
@@ -598,7 +598,7 @@ void crypto_destroy_tfm(void *mem, struct crypto_tfm *tfm);
 
 static inline void crypto_free_tfm(struct crypto_tfm *tfm)
 {
-	return crypto_destroy_tfm(tfm, tfm);
+	crypto_destroy_tfm(tfm, tfm);
 }
 
 int alg_test(const char *driver, const char *alg, u32 type, u32 mask);
diff --git a/include/linux/device.h b/include/linux/device.h
index 66fe271c2544..6bf53dfb5c1c 100644
--- a/include/linux/device.h
+++ b/include/linux/device.h
@@ -484,7 +484,7 @@ static inline int __must_check class_create_file(struct class *class,
 static inline void class_remove_file(struct class *class,
 				     const struct class_attribute *attr)
 {
-	return class_remove_file_ns(class, attr, NULL);
+	class_remove_file_ns(class, attr, NULL);
 }
 
 /* Simple class attribute that is just a static string */
@@ -1217,7 +1217,7 @@ static inline void device_remove_group(struct device *dev,
 {
 	const struct attribute_group *groups[] = { grp, NULL };
 
-	return device_remove_groups(dev, groups);
+	device_remove_groups(dev, groups);
 }
 
 extern int __must_check devm_device_add_groups(struct device *dev,
diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h
index 7653ea66874d..3a002dcce833 100644
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@ -548,7 +548,7 @@ static inline void *dma_alloc_coherent(struct device *dev, size_t size,
 static inline void dma_free_coherent(struct device *dev, size_t size,
 		void *cpu_addr, dma_addr_t dma_handle)
 {
-	return dma_free_attrs(dev, size, cpu_addr, dma_handle, 0);
+	dma_free_attrs(dev, size, cpu_addr, dma_handle, 0);
 }
 
 static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr)
@@ -791,7 +791,7 @@ static inline void *dma_alloc_wc(struct device *dev, size_t size,
 static inline void dma_free_wc(struct device *dev, size_t size,
 			       void *cpu_addr, dma_addr_t dma_addr)
 {
-	return dma_free_attrs(dev, size, cpu_addr, dma_addr,
+	dma_free_attrs(dev, size, cpu_addr, dma_addr,
 			      DMA_ATTR_WRITE_COMBINE);
 }
 #ifndef dma_free_writecombine
diff --git a/include/linux/pm_wakeup.h b/include/linux/pm_wakeup.h
index 4c2cba7ec1d4..75277260b5da 100644
--- a/include/linux/pm_wakeup.h
+++ b/include/linux/pm_wakeup.h
@@ -205,17 +205,17 @@ static inline void wakeup_source_trash(struct wakeup_source *ws)
 
 static inline void __pm_wakeup_event(struct wakeup_source *ws, unsigned int msec)
 {
-	return pm_wakeup_ws_event(ws, msec, false);
+	pm_wakeup_ws_event(ws, msec, false);
 }
 
 static inline void pm_wakeup_event(struct device *dev, unsigned int msec)
 {
-	return pm_wakeup_dev_event(dev, msec, false);
+	pm_wakeup_dev_event(dev, msec, false);
 }
 
 static inline void pm_wakeup_hard_event(struct device *dev)
 {
-	return pm_wakeup_dev_event(dev, 0, true);
+	pm_wakeup_dev_event(dev, 0, true);
 }
 
 #endif /* _LINUX_PM_WAKEUP_H */
diff --git a/include/linux/ratelimit.h b/include/linux/ratelimit.h
index 8ddf79e9207a..3bb6fe1e0a4f 100644
--- a/include/linux/ratelimit.h
+++ b/include/linux/ratelimit.h
@@ -49,7 +49,7 @@ static inline void ratelimit_state_init(struct ratelimit_state *rs,
 
 static inline void ratelimit_default_init(struct ratelimit_state *rs)
 {
-	return ratelimit_state_init(rs, DEFAULT_RATELIMIT_INTERVAL,
+	ratelimit_state_init(rs, DEFAULT_RATELIMIT_INTERVAL,
 					DEFAULT_RATELIMIT_BURST);
 }
 
diff --git a/include/linux/rhashtable.h b/include/linux/rhashtable.h
index 361c08e35dbc..12b3e4911b81 100644
--- a/include/linux/rhashtable.h
+++ b/include/linux/rhashtable.h
@@ -1263,7 +1263,7 @@ static inline int rhashtable_walk_init(struct rhashtable *ht,
 static inline void rhltable_walk_enter(struct rhltable *hlt,
 				       struct rhashtable_iter *iter)
 {
-	return rhashtable_walk_enter(&hlt->ht, iter);
+	rhashtable_walk_enter(&hlt->ht, iter);
 }
 
 /**
@@ -1279,12 +1279,12 @@ static inline void rhltable_free_and_destroy(struct rhltable *hlt,
 							     void *arg),
 					     void *arg)
 {
-	return rhashtable_free_and_destroy(&hlt->ht, free_fn, arg);
+	rhashtable_free_and_destroy(&hlt->ht, free_fn, arg);
 }
 
 static inline void rhltable_destroy(struct rhltable *hlt)
 {
-	return rhltable_free_and_destroy(hlt, NULL, NULL);
+	rhltable_free_and_destroy(hlt, NULL, NULL);
 }
 
 #endif /* _LINUX_RHASHTABLE_H */
diff --git a/include/linux/timekeeping.h b/include/linux/timekeeping.h
index 0021575fe871..5a3b82bbd741 100644
--- a/include/linux/timekeeping.h
+++ b/include/linux/timekeeping.h
@@ -89,7 +89,7 @@ static inline struct timespec get_monotonic_coarse(void)
 
 static inline void getboottime(struct timespec *ts)
 {
-	return getboottime64(ts);
+	getboottime64(ts);
 }
 #else
 /**
diff --git a/lib/rhashtable.c b/lib/rhashtable.c
index ddd7dde87c3c..b42eb69e4792 100644
--- a/lib/rhashtable.c
+++ b/lib/rhashtable.c
@@ -1084,7 +1084,7 @@ EXPORT_SYMBOL_GPL(rhashtable_free_and_destroy);
 
 void rhashtable_destroy(struct rhashtable *ht)
 {
-	return rhashtable_free_and_destroy(ht, NULL, NULL);
+	rhashtable_free_and_destroy(ht, NULL, NULL);
 }
 EXPORT_SYMBOL_GPL(rhashtable_destroy);
 
diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 77e4d3c5c57b..ac67fc4e8e02 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -1186,7 +1186,7 @@ static void __meminit __init_single_page(struct page *page, unsigned long pfn,
 static void __meminit __init_single_pfn(unsigned long pfn, unsigned long zone,
 					int nid)
 {
-	return __init_single_page(pfn_to_page(pfn), pfn, zone, nid);
+	__init_single_page(pfn_to_page(pfn), pfn, zone, nid);
 }
 
 #ifdef CONFIG_DEFERRED_STRUCT_PAGE_INIT
@@ -1335,7 +1335,7 @@ void __init __free_pages_bootmem(struct page *page, unsigned long pfn,
 {
 	if (early_page_uninitialised(pfn))
 		return;
-	return __free_pages_boot_core(page, order);
+	__free_pages_boot_core(page, order);
 }
 
 /*
-- 
