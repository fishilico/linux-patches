From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Fri, 16 Sep 2016 22:34:22 +0200
Subject: [PATCH] {CONSTIFY} lib/kobject: constify kobject.ktype structure
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

NB: when upstreaming, split in 2 patches: make get_ktype() const and
ktype and helper functions const

grsecurity kernels warns:

    drivers/firmware/memmap.c: In function ‘firmware_map_add_entry’:
    drivers/firmware/memmap.c:160:29: error: passing argument 2 of
    ‘kobject_init’ discards ‘const’ qualifier from pointer target type
    [-Werror=discarded-qualifiers]
      kobject_init(&entry->kobj, &memmap_ktype);
                                 ^
    In file included from include/linux/module.h:17:0,
                     from drivers/firmware/memmap.c:20:
    include/linux/kobject.h:92:13: note: expected ‘struct kobj_type *’
    but argument is of type ‘const struct kobj_type *’
     extern void kobject_init(struct kobject *kobj, struct kobj_type *ktype);
                 ^~~~~~~~~~~~

    drivers/firmware/efi/runtime-map.c: In function ‘add_sysfs_runtime_map_entry’:
    drivers/firmware/efi/runtime-map.c:130:29: error: passing argument 2
    of ‘kobject_init’ discards ‘const’ qualifier from pointer target
    type [-Werror=discarded-qualifiers]
      kobject_init(&entry->kobj, &map_ktype);
                                 ^
    In file included from include/linux/module.h:17:0,
                     from drivers/firmware/efi/runtime-map.c:10:
    include/linux/kobject.h:92:13: note: expected ‘struct kobj_type *’
    but argument is of type ‘const struct kobj_type *’
     extern void kobject_init(struct kobject *kobj, struct kobj_type *ktype);
                 ^~~~~~~~~~~~
---
 drivers/base/bus.c     | 2 +-
 include/linux/module.h | 2 +-
 kernel/params.c        | 2 +-
 lib/kobject.c          | 4 ++--
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/drivers/base/bus.c b/drivers/base/bus.c
index 4ec6dbab73be..a129ea5a2d93 100644
--- a/drivers/base/bus.c
+++ b/drivers/base/bus.c
@@ -158,7 +158,7 @@ static void bus_release(struct kobject *kobj)
 	bus->p = NULL;
 }
 
-static struct kobj_type bus_ktype = {
+static const struct kobj_type bus_ktype = {
 	.sysfs_ops	= &bus_sysfs_ops,
 	.release	= bus_release,
 };
diff --git a/include/linux/module.h b/include/linux/module.h
index 8c5909c0076c..701869049be2 100644
--- a/include/linux/module.h
+++ b/include/linux/module.h
@@ -826,7 +826,7 @@ void *dereference_module_function_descriptor(struct module *mod, void *ptr)
 
 #ifdef CONFIG_SYSFS
 extern struct kset *module_kset;
-extern struct kobj_type module_ktype;
+extern const struct kobj_type module_ktype;
 #endif /* CONFIG_SYSFS */
 
 #define symbol_request(x) try_then_request_module(symbol_get(x), "symbol:" #x)
diff --git a/kernel/params.c b/kernel/params.c
index 14d66070757b..049d7078fb21 100644
--- a/kernel/params.c
+++ b/kernel/params.c
@@ -947,7 +947,7 @@ static void module_kobj_release(struct kobject *kobj)
 	complete(mk->kobj_completion);
 }
 
-struct kobj_type module_ktype = {
+const struct kobj_type module_ktype = {
 	.release   =	module_kobj_release,
 	.sysfs_ops =	&module_sysfs_ops,
 };
diff --git a/lib/kobject.c b/lib/kobject.c
index 985ee1c4f2c6..52e2f9634f61 100644
--- a/lib/kobject.c
+++ b/lib/kobject.c
@@ -729,7 +729,7 @@ static void dynamic_kobj_release(struct kobject *kobj)
 	kfree(kobj);
 }
 
-static struct kobj_type dynamic_kobj_ktype = {
+static const struct kobj_type dynamic_kobj_ktype = {
 	.release	= dynamic_kobj_release,
 	.sysfs_ops	= &kobj_sysfs_ops,
 };
@@ -913,7 +913,7 @@ static void kset_get_ownership(const struct kobject *kobj, kuid_t *uid, kgid_t *
 		kobject_get_ownership(kobj->parent, uid, gid);
 }
 
-static struct kobj_type kset_ktype = {
+static const struct kobj_type kset_ktype = {
 	.sysfs_ops	= &kobj_sysfs_ops,
 	.release	= kset_release,
 	.get_ownership	= kset_get_ownership,
-- 
