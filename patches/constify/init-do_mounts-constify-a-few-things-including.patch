From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Mon, 2 Mar 2015 15:19:06 +0800
Subject: [PATCH] {CONSTIFY} init/do_mounts: constify a few things including
 sys_mount-related syscalls

---
 fs/namespace.c           | 10 +++++-----
 include/linux/syscalls.h | 10 +++++-----
 init/do_mounts.c         |  2 +-
 init/do_mounts.h         |  4 ++--
 4 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/fs/namespace.c b/fs/namespace.c
index ab4174a3c802..d6491b86c357 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1761,7 +1761,7 @@ int path_umount(struct path *path, int flags)
 	return ret;
 }
 
-static int ksys_umount(char __user *name, int flags)
+static int ksys_umount(const char __user *name, int flags)
 {
 	int lookup_flags = LOOKUP_MOUNTPOINT;
 	struct path path;
@@ -1779,7 +1779,7 @@ static int ksys_umount(char __user *name, int flags)
 	return path_umount(&path, flags);
 }
 
-SYSCALL_DEFINE2(umount, char __user *, name, int, flags)
+SYSCALL_DEFINE2(umount, const char __user *, name, int, flags)
 {
 	return ksys_umount(name, flags);
 }
@@ -1789,7 +1789,7 @@ SYSCALL_DEFINE2(umount, char __user *, name, int, flags)
 /*
  *	The 2.0 compatible umount. No flags.
  */
-SYSCALL_DEFINE1(oldumount, char __user *, name)
+SYSCALL_DEFINE1(oldumount, const char __user *, name)
 {
 	return ksys_umount(name, 0);
 }
@@ -3430,8 +3430,8 @@ struct dentry *mount_subtree(struct vfsmount *m, const char *name)
 }
 EXPORT_SYMBOL(mount_subtree);
 
-SYSCALL_DEFINE5(mount, char __user *, dev_name, char __user *, dir_name,
-		char __user *, type, unsigned long, flags, void __user *, data)
+SYSCALL_DEFINE5(mount, const char __user *, dev_name, const char __user *, dir_name,
+		const char __user *, type, unsigned long, flags, const void __user *, data)
 {
 	int ret;
 	char *kernel_type;
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 69c9a7010081..5601fe134d07 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -434,10 +434,10 @@ asmlinkage long sys_renameat(int olddfd, const char __user * oldname,
 			     int newdfd, const char __user * newname);
 
 /* fs/namespace.c */
-asmlinkage long sys_umount(char __user *name, int flags);
-asmlinkage long sys_mount(char __user *dev_name, char __user *dir_name,
-				char __user *type, unsigned long flags,
-				void __user *data);
+asmlinkage long sys_umount(const char __user *name, int flags);
+asmlinkage long sys_mount(const char __user *dev_name, const char __user *dir_name,
+				const char __user *type, unsigned long flags,
+				const void __user *data);
 asmlinkage long sys_pivot_root(const char __user *new_root,
 				const char __user *put_old);
 
@@ -1159,7 +1159,7 @@ asmlinkage long sys_vfork(void);
 asmlinkage long sys_recv(int, void __user *, size_t, unsigned);
 asmlinkage long sys_send(int, void __user *, size_t, unsigned);
 asmlinkage long sys_bdflush(int func, long data);
-asmlinkage long sys_oldumount(char __user *name);
+asmlinkage long sys_oldumount(const char __user *name);
 asmlinkage long sys_uselib(const char __user *library);
 asmlinkage long sys_sysfs(int option,
 				unsigned long arg1, unsigned long arg2);
diff --git a/init/do_mounts.c b/init/do_mounts.c
index 2b021fdfa927..c910f7ed5f23 100644
--- a/init/do_mounts.c
+++ b/init/do_mounts.c
@@ -402,7 +402,7 @@ static int __init do_mount_root(const char *name, const char *fs,
 	return ret;
 }
 
-void __init mount_block_root(char *name, int flags)
+void __init mount_block_root(const char *name, int flags)
 {
 	struct page *page = alloc_page(GFP_KERNEL);
 	char *fs_names = page_address(page);
diff --git a/init/do_mounts.h b/init/do_mounts.h
index 7a29ac3e427b..254ceb15c132 100644
--- a/init/do_mounts.h
+++ b/init/do_mounts.h
@@ -10,11 +10,11 @@
 #include <linux/root_dev.h>
 #include <linux/init_syscalls.h>
 
-void  mount_block_root(char *name, int flags);
+void  mount_block_root(const char *name, int flags);
 void  mount_root(void);
 extern int root_mountflags;
 
-static inline __init int create_dev(char *name, dev_t dev)
+static inline __init int create_dev(const char *name, dev_t dev)
 {
 	init_unlink(name);
 	return init_mknod(name, S_IFBLK | 0600, new_encode_dev(dev));
-- 
