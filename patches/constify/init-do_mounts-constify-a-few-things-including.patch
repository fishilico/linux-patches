From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Mon, 2 Mar 2015 15:19:06 +0800
Subject: [PATCH] {CONSTIFY} init/do_mounts: constify a few things including
 sys_mount-related syscalls

---
 fs/namespace.c           | 10 +++++-----
 include/linux/syscalls.h | 10 +++++-----
 init/do_mounts.c         | 14 +++++++-------
 init/do_mounts.h         |  6 +++---
 4 files changed, 20 insertions(+), 20 deletions(-)

diff --git a/fs/namespace.c b/fs/namespace.c
index e157efc54023..4f0d49a91fc6 100644
--- a/fs/namespace.c
+++ b/fs/namespace.c
@@ -1899,7 +1899,7 @@ int path_umount(struct path *path, int flags)
 	return ret;
 }
 
-static int ksys_umount(char __user *name, int flags)
+static int ksys_umount(const char __user *name, int flags)
 {
 	int lookup_flags = LOOKUP_MOUNTPOINT;
 	struct path path;
@@ -1917,7 +1917,7 @@ static int ksys_umount(char __user *name, int flags)
 	return path_umount(&path, flags);
 }
 
-SYSCALL_DEFINE2(umount, char __user *, name, int, flags)
+SYSCALL_DEFINE2(umount, const char __user *, name, int, flags)
 {
 	return ksys_umount(name, flags);
 }
@@ -1927,7 +1927,7 @@ SYSCALL_DEFINE2(umount, char __user *, name, int, flags)
 /*
  *	The 2.0 compatible umount. No flags.
  */
-SYSCALL_DEFINE1(oldumount, char __user *, name)
+SYSCALL_DEFINE1(oldumount, const char __user *, name)
 {
 	return ksys_umount(name, 0);
 }
@@ -3858,8 +3858,8 @@ struct dentry *mount_subtree(struct vfsmount *m, const char *name)
 }
 EXPORT_SYMBOL(mount_subtree);
 
-SYSCALL_DEFINE5(mount, char __user *, dev_name, char __user *, dir_name,
-		char __user *, type, unsigned long, flags, void __user *, data)
+SYSCALL_DEFINE5(mount, const char __user *, dev_name, const char __user *, dir_name,
+		const char __user *, type, unsigned long, flags, const void __user *, data)
 {
 	int ret;
 	char *kernel_type;
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index 03e3d0121d5e..c63d067d9a87 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -411,10 +411,10 @@ asmlinkage long sys_linkat(int olddfd, const char __user *oldname,
 			   int newdfd, const char __user *newname, int flags);
 asmlinkage long sys_renameat(int olddfd, const char __user * oldname,
 			     int newdfd, const char __user * newname);
-asmlinkage long sys_umount(char __user *name, int flags);
-asmlinkage long sys_mount(char __user *dev_name, char __user *dir_name,
-				char __user *type, unsigned long flags,
-				void __user *data);
+asmlinkage long sys_umount(const char __user *name, int flags);
+asmlinkage long sys_mount(const char __user *dev_name, const char __user *dir_name,
+				const char __user *type, unsigned long flags,
+				const void __user *data);
 asmlinkage long sys_pivot_root(const char __user *new_root,
 				const char __user *put_old);
 asmlinkage long sys_statfs(const char __user * path,
@@ -1060,7 +1060,7 @@ asmlinkage long sys_ustat(unsigned dev, struct ustat __user *ubuf);
 asmlinkage long sys_vfork(void);
 asmlinkage long sys_recv(int, void __user *, size_t, unsigned);
 asmlinkage long sys_send(int, void __user *, size_t, unsigned);
-asmlinkage long sys_oldumount(char __user *name);
+asmlinkage long sys_oldumount(const char __user *name);
 asmlinkage long sys_uselib(const char __user *library);
 asmlinkage long sys_sysfs(int option,
 				unsigned long arg1, unsigned long arg2);
diff --git a/init/do_mounts.c b/init/do_mounts.c
index 1aa015883519..d972aaaa9162 100644
--- a/init/do_mounts.c
+++ b/init/do_mounts.c
@@ -156,7 +156,7 @@ static int __init do_mount_root(const char *name, const char *fs,
 	return ret;
 }
 
-void __init mount_root_generic(char *name, char *pretty_name, int flags)
+void __init mount_root_generic(const char *name, const char *pretty_name, int flags)
 {
 	struct page *page = alloc_page(GFP_KERNEL);
 	char *fs_names = page_address(page);
@@ -315,7 +315,7 @@ static bool __init fs_is_nodev(char *fstype)
 	return ret;
 }
 
-static int __init mount_nodev_root(char *root_device_name)
+static int __init mount_nodev_root(const char *root_device_name)
 {
 	char *fs_names, *fstype;
 	int err = -EINVAL;
@@ -343,7 +343,7 @@ static int __init mount_nodev_root(char *root_device_name)
 }
 
 #ifdef CONFIG_BLOCK
-static void __init mount_block_root(char *root_device_name)
+static void __init mount_block_root(const char *root_device_name)
 {
 	int err = create_dev("/dev/root", ROOT_DEV);
 
@@ -352,12 +352,12 @@ static void __init mount_block_root(char *root_device_name)
 	mount_root_generic("/dev/root", root_device_name, root_mountflags);
 }
 #else
-static inline void mount_block_root(char *root_device_name)
+static inline void mount_block_root(const char *root_device_name)
 {
 }
 #endif /* CONFIG_BLOCK */
 
-void __init mount_root(char *root_device_name)
+void __init mount_root(const char *root_device_name)
 {
 	switch (ROOT_DEV) {
 	case Root_NFS:
@@ -382,7 +382,7 @@ void __init mount_root(char *root_device_name)
 }
 
 /* wait for any asynchronous scanning to complete */
-static void __init wait_for_root(char *root_device_name)
+static void __init wait_for_root(const char *root_device_name)
 {
 	if (ROOT_DEV != 0)
 		return;
@@ -396,7 +396,7 @@ static void __init wait_for_root(char *root_device_name)
 
 }
 
-static dev_t __init parse_root_device(char *root_device_name)
+static dev_t __init parse_root_device(const char *root_device_name)
 {
 	int error;
 	dev_t dev;
diff --git a/init/do_mounts.h b/init/do_mounts.h
index 15e372b00ce7..6d15c4a2312b 100644
--- a/init/do_mounts.h
+++ b/init/do_mounts.h
@@ -10,11 +10,11 @@
 #include <linux/root_dev.h>
 #include <linux/init_syscalls.h>
 
-void  mount_root_generic(char *name, char *pretty_name, int flags);
-void  mount_root(char *root_device_name);
+void  mount_root_generic(const char *name, const char *pretty_name, int flags);
+void  mount_root(const char *root_device_name);
 extern int root_mountflags;
 
-static inline __init int create_dev(char *name, dev_t dev)
+static inline __init int create_dev(const char *name, dev_t dev)
 {
 	init_unlink(name);
 	return init_mknod(name, S_IFBLK | 0600, new_encode_dev(dev));
-- 
