From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Mon, 2 Mar 2015 22:48:59 +0800
Subject: [PATCH] {REJECTED} reiserfs: fix several reiserfs_warning calls

reiserfs_warning takes an id and a format as arguments, not a single
format argument.  Fix 4 calls which do not follow this.

These bugs were found by adding __printf(4, 5) attribute to
__reiserfs_warning and using "gcc -Wformat=2" when compiling the
kernel.

Fixes: 45b03d5e8e67 ("reiserfs: rework reiserfs_warning")
Signed-off-by: Nicolas Iooss <nicolas.iooss_linux@m4x.org>

Sent-upstream: https://lkml.org/lkml/2015/3/6/311
---
 fs/reiserfs/bitmap.c | 4 ++--
 fs/reiserfs/procfs.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/fs/reiserfs/bitmap.c b/fs/reiserfs/bitmap.c
index bf708ac287b4..2dcc2a44917b 100644
--- a/fs/reiserfs/bitmap.c
+++ b/fs/reiserfs/bitmap.c
@@ -1431,8 +1431,8 @@ struct buffer_head *reiserfs_read_bitmap_block(struct super_block *sb,
 
 	bh = sb_bread(sb, block);
 	if (bh == NULL)
-		reiserfs_warning(sb, "sh-2029: %s: bitmap block (#%u) "
-		                 "reading failed", __func__, block);
+		reiserfs_warning(sb, "sh-2029",
+				 "bitmap block (#%u) reading failed", block);
 	else {
 		if (buffer_locked(bh)) {
 			int depth;
diff --git a/fs/reiserfs/procfs.c b/fs/reiserfs/procfs.c
index 155b82870333..34dc4052a1ae 100644
--- a/fs/reiserfs/procfs.c
+++ b/fs/reiserfs/procfs.c
@@ -428,7 +428,7 @@ int reiserfs_proc_info_init(struct super_block *sb)
 		add_file(sb, "journal", show_journal);
 		return 0;
 	}
-	reiserfs_warning(sb, "cannot create /proc/%s/%s",
+	reiserfs_warning(sb, NULL, "cannot create /proc/%s/%s",
 			 proc_info_root_name, b);
 	return 1;
 }
@@ -457,7 +457,7 @@ int reiserfs_proc_info_global_init(void)
 	if (proc_info_root == NULL) {
 		proc_info_root = proc_mkdir(proc_info_root_name, NULL);
 		if (!proc_info_root) {
-			reiserfs_warning(NULL, "cannot create /proc/%s",
+			reiserfs_warning(NULL, NULL, "cannot create /proc/%s",
 					 proc_info_root_name);
 			return 1;
 		}
-- 
