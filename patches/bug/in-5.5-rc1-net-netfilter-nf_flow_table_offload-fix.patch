From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Wed, 11 Dec 2019 21:18:19 +0100
Subject: [PATCH] {BUG in 5.5-rc1} net/netfilter/nf_flow_table_offload: fix
 endianness

On ARM, gcc reports:

    net/netfilter/nf_flow_table_offload.c: In function 'nf_flow_rule_match':
    net/netfilter/nf_flow_table_offload.c:80:21: error: unsigned
    conversion from 'int' to '__be16' {aka 'short unsigned int'} changes
    value from '327680' to '0' [-Werror=overflow]
       80 |   mask->tcp.flags = TCP_FLAG_RST | TCP_FLAG_FIN;
          |                     ^~~~~~~~~~~~
---
 net/netfilter/nf_flow_table_offload.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/net/netfilter/nf_flow_table_offload.c b/net/netfilter/nf_flow_table_offload.c
index 7ff4497ddd9f..1a1cd01d8e4f 100644
--- a/net/netfilter/nf_flow_table_offload.c
+++ b/net/netfilter/nf_flow_table_offload.c
@@ -77,7 +77,7 @@ static int nf_flow_rule_match(struct nf_flow_match *match,
 	switch (tuple->l4proto) {
 	case IPPROTO_TCP:
 		key->tcp.flags = 0;
-		mask->tcp.flags = TCP_FLAG_RST | TCP_FLAG_FIN;
+		mask->tcp.flags = __constant_cpu_to_be16(5); /* BUG: TCP_FLAG_RST | TCP_FLAG_FIN is __be32, not 16! */
 		match->dissector.used_keys |= BIT(FLOW_DISSECTOR_KEY_TCP);
 		break;
 	case IPPROTO_UDP:
-- 
