From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sat, 20 May 2017 11:32:17 +0200
Subject: [PATCH] {PRINTF} scripts/kconfig: add printf format attributes

When building with -Wformat-security and -Wsuggest-attribute=format in
HOSTCFLAGS, gcc complains about several functions misssing a printf
format attribute. Add them.
---
 scripts/kconfig/confdata.c        |  6 ++++--
 scripts/kconfig/lkc.h             |  6 ++++--
 scripts/kconfig/lxdialog/dialog.h |  4 ++--
 scripts/kconfig/menu.c            |  3 ++-
 scripts/kconfig/nconf.c           |  6 ++++--
 scripts/kconfig/parser.y          | 12 ++++++++----
 6 files changed, 24 insertions(+), 13 deletions(-)

diff --git a/scripts/kconfig/confdata.c b/scripts/kconfig/confdata.c
index a39d93e3c6ae..64697287e33e 100644
--- a/scripts/kconfig/confdata.c
+++ b/scripts/kconfig/confdata.c
@@ -177,7 +177,8 @@ static void conf_message(const char *fmt, ...)
 static const char *conf_filename;
 static int conf_lineno, conf_warnings;
 
-static void conf_warning(const char *fmt, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void conf_warning(const char *fmt, ...)
 {
 	va_list ap;
 	va_start(ap, fmt);
@@ -202,7 +203,8 @@ void conf_set_message_callback(void (*fn)(const char *s))
 	conf_message_callback = fn;
 }
 
-static void conf_message(const char *fmt, ...)
+static void __attribute__ ((format(printf, 1, 2)))
+conf_message(const char *fmt, ...)
 {
 	va_list ap;
 	char buf[4096];
diff --git a/scripts/kconfig/lkc.h b/scripts/kconfig/lkc.h
index d4ca8297364f..a225ba14b528 100644
--- a/scripts/kconfig/lkc.h
+++ b/scripts/kconfig/lkc.h
@@ -68,7 +68,8 @@ static inline void xfwrite(const void *str, size_t len, size_t count, FILE *out)
 
 /* menu.c */
 void _menu_init(void);
-void menu_warn(struct menu *menu, const char *fmt, ...);
+void menu_warn(struct menu *menu, const char *fmt, ...)
+	__attribute__ ((format(printf, 2, 3)));
 struct menu *menu_add_menu(void);
 void menu_end_menu(void);
 void menu_add_entry(struct symbol *sym);
@@ -106,7 +107,8 @@ struct gstr {
 struct gstr str_new(void);
 void str_free(struct gstr *gs);
 void str_append(struct gstr *gs, const char *s);
-void str_printf(struct gstr *gs, const char *fmt, ...);
+void str_printf(struct gstr *gs, const char *fmt, ...)
+	__attribute__ ((format(printf, 2, 3)));
 const char *str_get(struct gstr *gs);
 
 /* symbol.c */
diff --git a/scripts/kconfig/lxdialog/dialog.h b/scripts/kconfig/lxdialog/dialog.h
index 68b565e3c495..965c22593608 100644
--- a/scripts/kconfig/lxdialog/dialog.h
+++ b/scripts/kconfig/lxdialog/dialog.h
@@ -139,8 +139,8 @@ extern int saved_x, saved_y;		/* Needed in signal handler in mconf.c */
 
 /* item list as used by checklist and menubox */
 void item_reset(void);
-void item_make(const char *fmt, ...);
-void item_add_str(const char *fmt, ...);
+__attribute__ ((format(printf, 1, 2))) void item_make(const char *fmt, ...);
+__attribute__ ((format(printf, 1, 2))) void item_add_str(const char *fmt, ...);
 void item_set_tag(char tag);
 void item_set_data(void *p);
 void item_set_selected(int val);
diff --git a/scripts/kconfig/menu.c b/scripts/kconfig/menu.c
index a5fbd6ccc006..9f27c026d635 100644
--- a/scripts/kconfig/menu.c
+++ b/scripts/kconfig/menu.c
@@ -28,7 +28,8 @@ void menu_warn(struct menu *menu, const char *fmt, ...)
 	va_end(ap);
 }
 
-static void prop_warn(struct property *prop, const char *fmt, ...)
+static __attribute__ ((format(printf, 2, 3)))
+void prop_warn(struct property *prop, const char *fmt, ...)
 {
 	va_list ap;
 	va_start(ap, fmt);
diff --git a/scripts/kconfig/nconf.c b/scripts/kconfig/nconf.c
index e0f965529166..7dc2490f9c61 100644
--- a/scripts/kconfig/nconf.c
+++ b/scripts/kconfig/nconf.c
@@ -522,7 +522,8 @@ static int get_mext_match(const char *match_str, match_f flag)
 }
 
 /* Make a new item. */
-static void item_make(struct menu *menu, char tag, const char *fmt, ...)
+static __attribute__ ((format(printf, 3, 4)))
+void item_make(struct menu *menu, char tag, const char *fmt, ...)
 {
 	va_list ap;
 
@@ -562,7 +563,8 @@ static void item_make(struct menu *menu, char tag, const char *fmt, ...)
 }
 
 /* very hackish. adds a string to the last item added */
-static void item_add_str(const char *fmt, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void item_add_str(const char *fmt, ...)
 {
 	va_list ap;
 	int index = items_num-1;
diff --git a/scripts/kconfig/parser.y b/scripts/kconfig/parser.y
index 190f1117f35a..dc17548307c1 100644
--- a/scripts/kconfig/parser.y
+++ b/scripts/kconfig/parser.y
@@ -21,8 +21,10 @@
 int cdebug = PRINTD;
 
 static void yyerror(const char *err);
-static void zconfprint(const char *err, ...);
-static void zconf_error(const char *err, ...);
+static void zconfprint(const char *err, ...)
+	__attribute__ ((format(printf, 1, 2)));
+static void zconf_error(const char *err, ...)
+	__attribute__ ((format(printf, 1, 2)));
 static bool zconf_endtoken(const char *tokenname,
 			   const char *expected_tokenname);
 
@@ -541,7 +543,8 @@ static bool zconf_endtoken(const char *tokenname,
 	return true;
 }
 
-static void zconfprint(const char *err, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void zconfprint(const char *err, ...)
 {
 	va_list ap;
 
@@ -552,7 +555,8 @@ static void zconfprint(const char *err, ...)
 	fprintf(stderr, "\n");
 }
 
-static void zconf_error(const char *err, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void zconf_error(const char *err, ...)
 {
 	va_list ap;
 
-- 
