From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sun, 28 Jun 2015 15:24:06 +0800
Subject: [PATCH] {PRINTF} Add many printf format attributes

---
 arch/x86/boot/tools/build.c            |  3 ++-
 drivers/acpi/acpica/acutils.h          |  6 +++---
 drivers/acpi/acpica/nsrepair2.c        |  2 +-
 drivers/acpi/acpica/utdebug.c          |  2 +-
 drivers/base/cpu.c                     |  2 +-
 drivers/clk/clkdev.c                   |  7 ++++---
 drivers/iio/industrialio-trigger.c     |  3 ++-
 drivers/isdn/capi/capiutil.c           |  4 ++--
 drivers/isdn/hisax/fsm.h               |  2 +-
 drivers/isdn/hisax/hisax.h             |  2 +-
 drivers/isdn/hisax/hisax_isac.c        |  2 +-
 drivers/isdn/hisax/isdnl1.c            |  2 +-
 drivers/isdn/hisax/isdnl2.c            |  2 +-
 drivers/isdn/hisax/tei.c               |  6 +++---
 drivers/isdn/hysdn/hysdn_boot.c        |  4 ++--
 drivers/isdn/hysdn/hysdn_defs.h        |  3 ++-
 drivers/isdn/hysdn/hysdn_procconf.c    | 12 +++++++-----
 drivers/isdn/hysdn/hysdn_proclog.c     |  2 +-
 drivers/isdn/hysdn/hysdn_sched.c       |  2 +-
 drivers/pnp/interface.c                |  2 +-
 drivers/scsi/BusLogic.c                |  6 +++---
 drivers/scsi/esas2r/esas2r_log.c       |  8 ++++----
 drivers/staging/fbtft/fb_agm1264k-fl.c |  2 +-
 drivers/staging/fbtft/fb_ra8875.c      |  2 +-
 drivers/staging/fbtft/fbtft-io.c       | 12 ++++++------
 drivers/staging/fbtft/fbtft.h          |  2 +-
 drivers/staging/fbtft/fbtft_device.c   |  2 +-
 drivers/xen/xenbus/xenbus_client.c     | 10 ++++++----
 include/acpi/acpiosxf.h                |  3 ++-
 include/linux/iio/iio.h                |  2 +-
 include/linux/iio/trigger_consumer.h   |  2 +-
 include/linux/trace_events.h           |  3 ++-
 kernel/audit.c                         |  4 ++--
 kernel/trace/trace.h                   |  8 +++++---
 kernel/trace/trace_output.c            |  6 +++---
 net/dccp/ccid.c                        |  3 ++-
 net/tipc/netlink_compat.c              |  2 +-
 scripts/mod/modpost.h                  |  6 +++---
 scripts/unifdef.c                      |  2 +-
 security/tomoyo/common.c               |  3 ++-
 security/tomoyo/common.h               |  4 ++--
 sound/soc/soc-dapm.c                   |  3 ++-
 42 files changed, 90 insertions(+), 75 deletions(-)

diff --git a/arch/x86/boot/tools/build.c b/arch/x86/boot/tools/build.c
index a93d44e58f9c..73349d9a27be 100644
--- a/arch/x86/boot/tools/build.c
+++ b/arch/x86/boot/tools/build.c
@@ -127,7 +127,8 @@ static u32 partial_crc32(const u8 *s, int len, u32 crc)
 	return crc;
 }
 
-static void die(const char * str, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void die(const char * str, ...)
 {
 	va_list args;
 	va_start(args, str);
diff --git a/drivers/acpi/acpica/acutils.h b/drivers/acpi/acpica/acutils.h
index 3374d41582b5..a479ca42d2a0 100644
--- a/drivers/acpi/acpica/acutils.h
+++ b/drivers/acpi/acpica/acutils.h
@@ -686,18 +686,18 @@ void acpi_ut_delete_address_lists(void);
 /*
  * utxferror - various error/warning output functions
  */
-void ACPI_INTERNAL_VAR_XFACE
+__printf(5, 6) void ACPI_INTERNAL_VAR_XFACE
 acpi_ut_predefined_warning(const char *module_name,
 			   u32 line_number,
 			   char *pathname,
 			   u8 node_flags, const char *format, ...);
 
-void ACPI_INTERNAL_VAR_XFACE
+__printf(5, 6) void ACPI_INTERNAL_VAR_XFACE
 acpi_ut_predefined_info(const char *module_name,
 			u32 line_number,
 			char *pathname, u8 node_flags, const char *format, ...);
 
-void ACPI_INTERNAL_VAR_XFACE
+__printf(5, 6) void ACPI_INTERNAL_VAR_XFACE
 acpi_ut_predefined_bios_error(const char *module_name,
 			      u32 line_number,
 			      char *pathname,
diff --git a/drivers/acpi/acpica/nsrepair2.c b/drivers/acpi/acpica/nsrepair2.c
index a3bd6280882c..69043ba8846b 100644
--- a/drivers/acpi/acpica/nsrepair2.c
+++ b/drivers/acpi/acpica/nsrepair2.c
@@ -271,7 +271,7 @@ acpi_ns_repair_FDE(struct acpi_evaluate_info *info,
 			ACPI_WARN_PREDEFINED((AE_INFO,
 					      info->full_pathname,
 					      info->node_flags,
-					      "Incorrect return buffer length %u, expected %u",
+					      "Incorrect return buffer length %u, expected %zu",
 					      return_object->buffer.length,
 					      ACPI_FDE_DWORD_BUFFER_SIZE));
 
diff --git a/drivers/acpi/acpica/utdebug.c b/drivers/acpi/acpica/utdebug.c
index aabdc25effd9..7d438ddf6dad 100644
--- a/drivers/acpi/acpica/utdebug.c
+++ b/drivers/acpi/acpica/utdebug.c
@@ -158,7 +158,7 @@ acpi_debug_print(u32 requested_debug_level,
 	 * Display the module name, current line number, thread ID (if requested),
 	 * current procedure nesting level, and the current procedure name
 	 */
-	acpi_os_printf("%9s-%04ld ", module_name, line_number);
+	acpi_os_printf("%9s-%04u ", module_name, line_number);
 
 #ifdef ACPI_APPLICATION
 	/*
diff --git a/drivers/base/cpu.c b/drivers/base/cpu.c
index eb9443d5bae1..f460512ef35c 100644
--- a/drivers/base/cpu.c
+++ b/drivers/base/cpu.c
@@ -409,7 +409,7 @@ static void device_create_release(struct device *dev)
 	kfree(dev);
 }
 
-static struct device *
+static __printf(4, 0) struct device *
 __cpu_device_create(struct device *parent, void *drvdata,
 		    const struct attribute_group **groups,
 		    const char *fmt, va_list args)
diff --git a/drivers/clk/clkdev.c b/drivers/clk/clkdev.c
index 9ab3db8b3988..1bd1c0313fc5 100644
--- a/drivers/clk/clkdev.c
+++ b/drivers/clk/clkdev.c
@@ -247,7 +247,7 @@ struct clk_lookup_alloc {
 	char	con_id[MAX_CON_ID];
 };
 
-static struct clk_lookup * __ref
+static __printf(3, 0) struct clk_lookup * __ref
 vclkdev_alloc(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	va_list ap)
 {
@@ -271,7 +271,7 @@ vclkdev_alloc(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	return &cla->cl;
 }
 
-static struct clk_lookup *
+static __printf(3, 0) struct clk_lookup *
 vclkdev_create(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	va_list ap)
 {
@@ -387,7 +387,8 @@ void clkdev_drop(struct clk_lookup *cl)
 }
 EXPORT_SYMBOL(clkdev_drop);
 
-static struct clk_lookup *__clk_register_clkdev(struct clk_hw *hw,
+static __printf(3, 4) struct clk_lookup *
+__clk_register_clkdev(struct clk_hw *hw,
 						const char *con_id,
 						const char *dev_id, ...)
 {
diff --git a/drivers/iio/industrialio-trigger.c b/drivers/iio/industrialio-trigger.c
index ce66699c7fcc..33c81a41861f 100644
--- a/drivers/iio/industrialio-trigger.c
+++ b/drivers/iio/industrialio-trigger.c
@@ -516,7 +516,8 @@ static void iio_trig_subirqunmask(struct irq_data *d)
 	trig->subirqs[d->irq - trig->subirq_base].enabled = true;
 }
 
-static struct iio_trigger *viio_trigger_alloc(const char *fmt, va_list vargs)
+static __printf(1, 0)
+struct iio_trigger *viio_trigger_alloc(const char *fmt, va_list vargs)
 {
 	struct iio_trigger *trig;
 	int i;
diff --git a/drivers/isdn/capi/capiutil.c b/drivers/isdn/capi/capiutil.c
index 9846d82eb097..1b9f41563d47 100644
--- a/drivers/isdn/capi/capiutil.c
+++ b/drivers/isdn/capi/capiutil.c
@@ -566,7 +566,7 @@ static char *pnames[] =
 #include <stdarg.h>
 
 /*-------------------------------------------------------*/
-static _cdebbuf *bufprint(_cdebbuf *cdb, char *fmt, ...)
+static __printf(2, 3) _cdebbuf *bufprint(_cdebbuf *cdb, char *fmt, ...)
 {
 	va_list f;
 	size_t n, r;
@@ -672,7 +672,7 @@ static _cdebbuf *protocol_message_2_pars(_cdebbuf *cdb, _cmsg *cmsg, int level)
 			cmsg->l += 2;
 			break;
 		case _CDWORD:
-			cdb = bufprint(cdb, "%-*s = 0x%lx\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));
+			cdb = bufprint(cdb, "%-*s = 0x%x\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));
 			cmsg->l += 4;
 			break;
 		case _CSTRUCT:
diff --git a/drivers/isdn/hisax/fsm.h b/drivers/isdn/hisax/fsm.h
index 8c7385619a46..04bb1b3512e3 100644
--- a/drivers/isdn/hisax/fsm.h
+++ b/drivers/isdn/hisax/fsm.h
@@ -32,7 +32,7 @@ struct FsmInst {
 	int debug;
 	void *userdata;
 	int userint;
-	void (*printdebug) (struct FsmInst *, char *, ...);
+	void (__printf(2, 3) *printdebug) (struct FsmInst *, char *, ...);
 };
 
 struct FsmNode {
diff --git a/drivers/isdn/hisax/hisax.h b/drivers/isdn/hisax/hisax.h
index 40080e06421c..e62eb874064b 100644
--- a/drivers/isdn/hisax/hisax.h
+++ b/drivers/isdn/hisax/hisax.h
@@ -179,7 +179,7 @@ struct FsmInst {
 	int debug;
 	void *userdata;
 	int userint;
-	void (*printdebug) (struct FsmInst *, char *, ...);
+	void (__printf(2, 3) *printdebug) (struct FsmInst *, char *, ...);
 };
 
 struct FsmNode {
diff --git a/drivers/isdn/hisax/hisax_isac.c b/drivers/isdn/hisax/hisax_isac.c
index 0f36375478c5..4639b3d0d04d 100644
--- a/drivers/isdn/hisax/hisax_isac.c
+++ b/drivers/isdn/hisax/hisax_isac.c
@@ -428,7 +428,7 @@ static struct FsmNode L1FnList[] __initdata =
 	{ST_L1_F8,            EV_PH_DC,             l1_go_f3pdown},
 };
 
-static void l1m_debug(struct FsmInst *fi, char *fmt, ...)
+static __printf(2, 3) void l1m_debug(struct FsmInst *fi, char *fmt, ...)
 {
 	va_list args;
 	char buf[256];
diff --git a/drivers/isdn/hisax/isdnl1.c b/drivers/isdn/hisax/isdnl1.c
index a560842c0e48..b52da087bb94 100644
--- a/drivers/isdn/hisax/isdnl1.c
+++ b/drivers/isdn/hisax/isdnl1.c
@@ -138,7 +138,7 @@ debugl1(struct IsdnCardState *cs, char *fmt, ...)
 	va_end(args);
 }
 
-static void
+static __printf(2, 3) void
 l1m_debug(struct FsmInst *fi, char *fmt, ...)
 {
 	va_list args;
diff --git a/drivers/isdn/hisax/isdnl2.c b/drivers/isdn/hisax/isdnl2.c
index 1a40ed04cb52..5b44b47a26d6 100644
--- a/drivers/isdn/hisax/isdnl2.c
+++ b/drivers/isdn/hisax/isdnl2.c
@@ -1756,7 +1756,7 @@ releasestack_isdnl2(struct PStack *st)
 	ReleaseWin(&st->l2);
 }
 
-static void
+static __printf(2, 3) void
 l2m_debug(struct FsmInst *fi, char *fmt, ...)
 {
 	va_list args;
diff --git a/drivers/isdn/hisax/tei.c b/drivers/isdn/hisax/tei.c
index 9195f9fd628f..bf4928dc69fc 100644
--- a/drivers/isdn/hisax/tei.c
+++ b/drivers/isdn/hisax/tei.c
@@ -320,7 +320,7 @@ tei_l1l2(struct PStack *st, int pr, void *arg)
 	if (pr == (PH_DATA | INDICATION)) {
 		if (skb->len < 3) {
 			st->ma.tei_m.printdebug(&st->ma.tei_m,
-						"short mgr frame %ld/3", skb->len);
+						"short mgr frame %u/3", skb->len);
 		} else if ((skb->data[0] != ((TEI_SAPI << 2) | 2)) ||
 			   (skb->data[1] != ((GROUP_TEI << 1) | 1))) {
 			st->ma.tei_m.printdebug(&st->ma.tei_m,
@@ -333,7 +333,7 @@ tei_l1l2(struct PStack *st, int pr, void *arg)
 			skb_pull(skb, 3);
 			if (skb->len < 5) {
 				st->ma.tei_m.printdebug(&st->ma.tei_m,
-							"short mgr frame %ld/5", skb->len);
+							"short mgr frame %u/5", skb->len);
 			} else if (skb->data[0] != TEI_ENTITY_ID) {
 				/* wrong management entity identifier, ignore */
 				st->ma.tei_m.printdebug(&st->ma.tei_m,
@@ -390,7 +390,7 @@ tei_l2tei(struct PStack *st, int pr, void *arg)
 	}
 }
 
-static void
+static __printf(2, 3) void
 tei_debug(struct FsmInst *fi, char *fmt, ...)
 {
 	va_list args;
diff --git a/drivers/isdn/hysdn/hysdn_boot.c b/drivers/isdn/hysdn/hysdn_boot.c
index ba177c3a621b..5404e58d3cb6 100644
--- a/drivers/isdn/hysdn/hysdn_boot.c
+++ b/drivers/isdn/hysdn/hysdn_boot.c
@@ -155,7 +155,7 @@ pof_handle_data(hysdn_card *card, int datlen)
 
 	default:
 		if (card->debug_flags & LOG_POF_RECORD)
-			hysdn_addlog(card, "POF got data(id=0x%lx) len=%d offs=0x%lx", boot->pof_recid,
+			hysdn_addlog(card, "POF got data(id=0x%x) len=%d offs=0x%lx", boot->pof_recid,
 				     datlen, boot->pof_recoffset);
 
 		break;	/* simply skip record */
@@ -217,7 +217,7 @@ pof_write_buffer(hysdn_card *card, int datlen)
 		boot->pof_recoffset = 0;	/* no starting offset */
 
 		if (card->debug_flags & LOG_POF_RECORD)
-			hysdn_addlog(card, "POF: got record id=0x%lx length=%ld ",
+			hysdn_addlog(card, "POF: got record id=0x%x length=%ld ",
 				     boot->pof_recid, boot->pof_reclen);
 
 		boot->pof_state = POF_READ_TAG_DATA;	/* now start with tag data */
diff --git a/drivers/isdn/hysdn/hysdn_defs.h b/drivers/isdn/hysdn/hysdn_defs.h
index cdac46a21692..6d5c4deba042 100644
--- a/drivers/isdn/hysdn/hysdn_defs.h
+++ b/drivers/isdn/hysdn/hysdn_defs.h
@@ -235,7 +235,8 @@ extern void hysdn_procconf_release(void);	/* deinit proc config filesys */
 /* hysdn_proclog.c */
 extern int hysdn_proclog_init(hysdn_card *);	/* init proc log entry */
 extern void hysdn_proclog_release(hysdn_card *);	/* deinit proc log entry */
-extern void hysdn_addlog(hysdn_card *, char *, ...);	/* output data to log */
+extern __printf(2, 3)
+void hysdn_addlog(hysdn_card *, const char *, ...);	/* output data to log */
 extern void hysdn_card_errlog(hysdn_card *, tErrLogEntry *, int);	/* output card log */
 
 /* boardergo.c */
diff --git a/drivers/isdn/hysdn/hysdn_procconf.c b/drivers/isdn/hysdn/hysdn_procconf.c
index 73079213ec94..62306515bc1f 100644
--- a/drivers/isdn/hysdn/hysdn_procconf.c
+++ b/drivers/isdn/hysdn/hysdn_procconf.c
@@ -188,7 +188,7 @@ hysdn_conf_write(struct file *file, const char __user *buf, size_t count, loff_t
 				cnf->buf_size += count;		/* add chars to string */
 				if (cnf->buf_size >= CONF_LINE_LEN - 1) {
 					if (cnf->card->debug_flags & LOG_CNF_MISC)
-						hysdn_addlog(cnf->card, "cnf line too long %d chars pos %d", cnf->buf_size, count);
+						hysdn_addlog(cnf->card, "cnf line too long %d chars pos %zu", cnf->buf_size, count);
 					return (-ERR_CONF_LONG);
 				}
 			}	/* not delimited */
@@ -236,8 +236,9 @@ hysdn_conf_open(struct inode *ino, struct file *filep)
 	mutex_lock(&hysdn_conf_mutex);
 	card = PDE_DATA(ino);
 	if (card->debug_flags & (LOG_PROC_OPEN | LOG_PROC_ALL))
-		hysdn_addlog(card, "config open for uid=%d gid=%d mode=0x%x",
-			     filep->f_cred->fsuid, filep->f_cred->fsgid,
+		hysdn_addlog(card, "config open for uid=%u gid=%u mode=0x%x",
+			     from_kuid(&init_user_ns, filep->f_cred->fsuid),
+			     from_kgid(&init_user_ns, filep->f_cred->fsgid),
 			     filep->f_mode);
 
 	if ((filep->f_mode & (FMODE_READ | FMODE_WRITE)) == FMODE_WRITE) {
@@ -310,8 +311,9 @@ hysdn_conf_close(struct inode *ino, struct file *filep)
 	mutex_lock(&hysdn_conf_mutex);
 	card = PDE_DATA(ino);
 	if (card->debug_flags & (LOG_PROC_OPEN | LOG_PROC_ALL))
-		hysdn_addlog(card, "config close for uid=%d gid=%d mode=0x%x",
-			     filep->f_cred->fsuid, filep->f_cred->fsgid,
+		hysdn_addlog(card, "config close for uid=%u gid=%u mode=0x%x",
+			     from_kuid(&init_user_ns, filep->f_cred->fsuid),
+			     from_kgid(&init_user_ns, filep->f_cred->fsgid),
 			     filep->f_mode);
 
 	if ((filep->f_mode & (FMODE_READ | FMODE_WRITE)) == FMODE_WRITE) {
diff --git a/drivers/isdn/hysdn/hysdn_proclog.c b/drivers/isdn/hysdn/hysdn_proclog.c
index 6e898b90e86e..4b7ba6ba1727 100644
--- a/drivers/isdn/hysdn/hysdn_proclog.c
+++ b/drivers/isdn/hysdn/hysdn_proclog.c
@@ -65,7 +65,7 @@ hysdn_card_errlog(hysdn_card *card, tErrLogEntry *logp, int maxsize)
 /* Log function using format specifiers for output */
 /***************************************************/
 void
-hysdn_addlog(hysdn_card *card, char *fmt, ...)
+hysdn_addlog(hysdn_card *card, const char *fmt, ...)
 {
 	struct procdata *pd = card->proclog;
 	char *cp;
diff --git a/drivers/isdn/hysdn/hysdn_sched.c b/drivers/isdn/hysdn/hysdn_sched.c
index 31d7c1415543..63da693c6822 100644
--- a/drivers/isdn/hysdn/hysdn_sched.c
+++ b/drivers/isdn/hysdn/hysdn_sched.c
@@ -153,7 +153,7 @@ hysdn_tx_cfgline(hysdn_card *card, unsigned char *line, unsigned short chan)
 	unsigned long flags;
 
 	if (card->debug_flags & LOG_SCHED_ASYN)
-		hysdn_addlog(card, "async tx-cfg chan=%d len=%d", chan, strlen(line) + 1);
+		hysdn_addlog(card, "async tx-cfg chan=%d len=%zu", chan, strlen(line) + 1);
 
 	while (card->async_busy) {
 
diff --git a/drivers/pnp/interface.c b/drivers/pnp/interface.c
index 187e4a1175b0..553fb28c2d7f 100644
--- a/drivers/pnp/interface.c
+++ b/drivers/pnp/interface.c
@@ -33,7 +33,7 @@ struct pnp_info_buffer {
 
 typedef struct pnp_info_buffer pnp_info_buffer_t;
 
-static int pnp_printf(pnp_info_buffer_t * buffer, char *fmt, ...)
+static __printf(2, 3) int pnp_printf(pnp_info_buffer_t * buffer, char *fmt, ...)
 {
 	va_list args;
 	int res;
diff --git a/drivers/scsi/BusLogic.c b/drivers/scsi/BusLogic.c
index e41e51f1da71..86e04b09110b 100644
--- a/drivers/scsi/BusLogic.c
+++ b/drivers/scsi/BusLogic.c
@@ -3584,8 +3584,8 @@ Target	Requested Completed  Requested Completed  Requested Completed\n\
   blogic_msg prints Driver Messages.
 */
 
-static void blogic_msg(enum blogic_msglevel msglevel, char *fmt,
-			struct blogic_adapter *adapter, ...)
+static __printf(2, 4) void blogic_msg(enum blogic_msglevel msglevel, char *fmt,
+				      struct blogic_adapter *adapter, ...)
 {
 	static char buf[BLOGIC_LINEBUF_SIZE];
 	static bool begin = true;
@@ -3696,7 +3696,7 @@ static int __init blogic_parseopts(char *options)
 					blogic_probe_options.probe134 = true;
 					break;
 				default:
-					blogic_err("BusLogic: Invalid Driver Options " "(invalid I/O Address 0x%X)\n", NULL, io_addr);
+					blogic_err("BusLogic: Invalid Driver Options " "(invalid I/O Address 0x%lX)\n", NULL, io_addr);
 					return 0;
 				}
 			} else if (blogic_parse(&options, "NoProbeISA"))
diff --git a/drivers/scsi/esas2r/esas2r_log.c b/drivers/scsi/esas2r/esas2r_log.c
index 65fdf22b0ba9..3349670b09de 100644
--- a/drivers/scsi/esas2r/esas2r_log.c
+++ b/drivers/scsi/esas2r/esas2r_log.c
@@ -113,10 +113,10 @@ static const char *translate_esas2r_event_level_to_kernel(const long level)
  *
  * @return 0 on success, or -1 if an error occurred.
  */
-static int esas2r_log_master(const long level,
-			     const struct device *dev,
-			     const char *format,
-			     va_list args)
+static __printf(3, 0) int esas2r_log_master(const long level,
+					    const struct device *dev,
+					    const char *format,
+					    va_list args)
 {
 	if (level <= event_log_level) {
 		unsigned long flags = 0;
diff --git a/drivers/staging/fbtft/fb_agm1264k-fl.c b/drivers/staging/fbtft/fb_agm1264k-fl.c
index f6f30f5bf15a..fac9562a9b90 100644
--- a/drivers/staging/fbtft/fb_agm1264k-fl.c
+++ b/drivers/staging/fbtft/fb_agm1264k-fl.c
@@ -406,7 +406,7 @@ static int write_vmem(struct fbtft_par *par, size_t offset, size_t len)
 static int write(struct fbtft_par *par, void *buf, size_t len)
 {
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	gpio_set_value(par->RW, 0); /* set write mode */
 
diff --git a/drivers/staging/fbtft/fb_ra8875.c b/drivers/staging/fbtft/fb_ra8875.c
index 5d3b76ca74d8..55350cf98ca9 100644
--- a/drivers/staging/fbtft/fb_ra8875.c
+++ b/drivers/staging/fbtft/fb_ra8875.c
@@ -24,7 +24,7 @@ static int write_spi(struct fbtft_par *par, void *buf, size_t len)
 	struct spi_message m;
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	if (!par->spi) {
 		dev_err(par->info->device,
diff --git a/drivers/staging/fbtft/fbtft-io.c b/drivers/staging/fbtft/fbtft-io.c
index b5051d3d46a6..4a31f14636e2 100644
--- a/drivers/staging/fbtft/fbtft-io.c
+++ b/drivers/staging/fbtft/fbtft-io.c
@@ -14,7 +14,7 @@ int fbtft_write_spi(struct fbtft_par *par, void *buf, size_t len)
 	struct spi_message m;
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	if (!par->spi) {
 		dev_err(par->info->device,
@@ -47,7 +47,7 @@ int fbtft_write_spi_emulate_9(struct fbtft_par *par, void *buf, size_t len)
 	u64 val, dc, tmp;
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	if (!par->extra) {
 		dev_err(par->info->device, "%s: error: par->extra is NULL\n",
@@ -109,7 +109,7 @@ int fbtft_read_spi(struct fbtft_par *par, void *buf, size_t len)
 		txbuf[0] = par->startbyte | 0x3;
 		t.tx_buf = txbuf;
 		fbtft_par_dbg_hex(DEBUG_READ, par, par->info->device, u8,
-				  txbuf, len, "%s(len=%d) txbuf => ",
+				  txbuf, len, "%s(len=%zu) txbuf => ",
 				  __func__, len);
 	}
 
@@ -117,7 +117,7 @@ int fbtft_read_spi(struct fbtft_par *par, void *buf, size_t len)
 	spi_message_add_tail(&t, &m);
 	ret = spi_sync(par->spi, &m);
 	fbtft_par_dbg_hex(DEBUG_READ, par, par->info->device, u8, buf, len,
-			  "%s(len=%d) buf <= ", __func__, len);
+			  "%s(len=%zu) buf <= ", __func__, len);
 
 	return ret;
 }
@@ -136,7 +136,7 @@ int fbtft_write_gpio8_wr(struct fbtft_par *par, void *buf, size_t len)
 #endif
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	while (len--) {
 		data = *(u8 *)buf;
@@ -186,7 +186,7 @@ int fbtft_write_gpio16_wr(struct fbtft_par *par, void *buf, size_t len)
 #endif
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	while (len) {
 		data = *(u16 *)buf;
diff --git a/drivers/staging/fbtft/fbtft.h b/drivers/staging/fbtft/fbtft.h
index ac427baa464a..99a37b3320c9 100644
--- a/drivers/staging/fbtft/fbtft.h
+++ b/drivers/staging/fbtft/fbtft.h
@@ -240,7 +240,7 @@ struct fbtft_par {
 /* fbtft-core.c */
 int fbtft_write_buf_dc(struct fbtft_par *par, void *buf, size_t len, int dc);
 void fbtft_dbg_hex(const struct device *dev, int groupsize,
-		   void *buf, size_t len, const char *fmt, ...);
+		   void *buf, size_t len, const char *fmt, ...) __printf(5, 6);
 struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 					struct device *dev,
 					struct fbtft_platform_data *pdata);
diff --git a/drivers/staging/fbtft/fbtft_device.c b/drivers/staging/fbtft/fbtft_device.c
index 046f9d355ecb..9d99be41d629 100644
--- a/drivers/staging/fbtft/fbtft_device.c
+++ b/drivers/staging/fbtft/fbtft_device.c
@@ -1240,7 +1240,7 @@ static int write_gpio16_wr_slow(struct fbtft_par *par, void *buf, size_t len)
 #endif
 
 	fbtft_par_dbg_hex(DEBUG_WRITE, par, par->info->device, u8, buf, len,
-			  "%s(len=%d): ", __func__, len);
+			  "%s(len=%zu): ", __func__, len);
 
 	while (len) {
 		data = *(u16 *)buf;
diff --git a/drivers/xen/xenbus/xenbus_client.c b/drivers/xen/xenbus/xenbus_client.c
index e17ca8156171..306c1196fedb 100644
--- a/drivers/xen/xenbus/xenbus_client.c
+++ b/drivers/xen/xenbus/xenbus_client.c
@@ -259,8 +259,9 @@ int xenbus_frontend_closed(struct xenbus_device *dev)
 }
 EXPORT_SYMBOL_GPL(xenbus_frontend_closed);
 
-static void xenbus_va_dev_error(struct xenbus_device *dev, int err,
-				const char *fmt, va_list ap)
+static __printf(3, 0)
+void xenbus_va_dev_error(struct xenbus_device *dev, int err,
+			 const char *fmt, va_list ap)
 {
 	unsigned int len;
 	char *printf_buffer;
@@ -331,8 +332,9 @@ EXPORT_SYMBOL_GPL(xenbus_dev_fatal);
  * Equivalent to xenbus_dev_fatal(dev, err, fmt, args), but helps
  * avoiding recursion within xenbus_switch_state.
  */
-static void xenbus_switch_fatal(struct xenbus_device *dev, int depth, int err,
-				const char *fmt, ...)
+static __printf(4, 5) void xenbus_switch_fatal(struct xenbus_device *dev,
+					       int depth, int err,
+					       const char *fmt, ...)
 {
 	va_list ap;
 
diff --git a/include/acpi/acpiosxf.h b/include/acpi/acpiosxf.h
index eb1f21af7556..4d9270272af8 100644
--- a/include/acpi/acpiosxf.h
+++ b/include/acpi/acpiosxf.h
@@ -330,11 +330,12 @@ acpi_status acpi_os_enter_sleep(u8 sleep_state, u32 rega_value, u32 regb_value);
  * Debug print routines
  */
 #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_printf
+__printf(1, 2)
 void ACPI_INTERNAL_VAR_XFACE acpi_os_printf(const char *format, ...);
 #endif
 
 #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_vprintf
-void acpi_os_vprintf(const char *format, va_list args);
+__printf(1, 0) void acpi_os_vprintf(const char *format, va_list args);
 #endif
 
 #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_redirect_output
diff --git a/include/linux/iio/iio.h b/include/linux/iio/iio.h
index a74cb177dc6f..bcc67704517f 100644
--- a/include/linux/iio/iio.h
+++ b/include/linux/iio/iio.h
@@ -694,7 +694,7 @@ void iio_device_free(struct iio_dev *indio_dev);
 int devm_iio_device_match(struct device *dev, void *res, void *data);
 struct iio_dev *devm_iio_device_alloc(struct device *dev, int sizeof_priv);
 void devm_iio_device_free(struct device *dev, struct iio_dev *indio_dev);
-struct iio_trigger *devm_iio_trigger_alloc(struct device *dev,
+__printf(2, 3) struct iio_trigger *devm_iio_trigger_alloc(struct device *dev,
 						const char *fmt, ...);
 void devm_iio_trigger_free(struct device *dev, struct iio_trigger *iio_trig);
 
diff --git a/include/linux/iio/trigger_consumer.h b/include/linux/iio/trigger_consumer.h
index c4f8c7409666..6b0e38074444 100644
--- a/include/linux/iio/trigger_consumer.h
+++ b/include/linux/iio/trigger_consumer.h
@@ -41,7 +41,7 @@ struct iio_poll_func {
 };
 
 
-struct iio_poll_func
+__printf(5, 6) struct iio_poll_func
 *iio_alloc_pollfunc(irqreturn_t (*h)(int irq, void *p),
 		    irqreturn_t (*thread)(int irq, void *p),
 		    int type,
diff --git a/include/linux/trace_events.h b/include/linux/trace_events.h
index 8a62731673f7..b809229827d3 100644
--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -162,7 +162,8 @@ void tracing_record_taskinfo_sched_switch(struct task_struct *prev,
 void tracing_record_cmdline(struct task_struct *task);
 void tracing_record_tgid(struct task_struct *task);
 
-int trace_output_call(struct trace_iterator *iter, char *name, char *fmt, ...);
+__printf(3, 4)
+int trace_output_call(struct trace_iterator *iter, char *name, const char *fmt, ...);
 
 struct event_filter;
 
diff --git a/kernel/audit.c b/kernel/audit.c
index 632d36059556..58d64df395e7 100644
--- a/kernel/audit.c
+++ b/kernel/audit.c
@@ -1833,8 +1833,8 @@ static inline int audit_expand(struct audit_buffer *ab, int extra)
  * will be called a second time.  Currently, we assume that a printk
  * can't format message larger than 1024 bytes, so we don't either.
  */
-static void audit_log_vformat(struct audit_buffer *ab, const char *fmt,
-			      va_list args)
+static __printf(2, 0) void audit_log_vformat(struct audit_buffer *ab,
+					     const char *fmt, va_list args)
 {
 	int len, avail;
 	struct sk_buff *skb;
diff --git a/kernel/trace/trace.h b/kernel/trace/trace.h
index 08900828d282..57eb213fe0d6 100644
--- a/kernel/trace/trace.h
+++ b/kernel/trace/trace.h
@@ -800,15 +800,17 @@ extern int trace_selftest_startup_branch(struct tracer *trace,
 
 extern void *head_page(struct trace_array_cpu *data);
 extern unsigned long long ns2usecs(u64 nsec);
-extern int
+extern __printf(2, 0) int
 trace_vbprintk(unsigned long ip, const char *fmt, va_list args);
-extern int
+extern __printf(2, 0) int
 trace_vprintk(unsigned long ip, const char *fmt, va_list args);
-extern int
+extern __printf(3, 0) int
 trace_array_vprintk(struct trace_array *tr,
 		    unsigned long ip, const char *fmt, va_list args);
+extern __printf(3, 4)
 int trace_array_printk(struct trace_array *tr,
 		       unsigned long ip, const char *fmt, ...);
+extern __printf(3, 4)
 int trace_array_printk_buf(struct ring_buffer *buffer,
 			   unsigned long ip, const char *fmt, ...);
 void trace_printk_seq(struct trace_seq *s);
diff --git a/kernel/trace/trace_output.c b/kernel/trace/trace_output.c
index 54373d93e251..8bf95f2f3c3b 100644
--- a/kernel/trace/trace_output.c
+++ b/kernel/trace/trace_output.c
@@ -297,8 +297,8 @@ int trace_raw_output_prep(struct trace_iterator *iter,
 }
 EXPORT_SYMBOL(trace_raw_output_prep);
 
-static int trace_output_raw(struct trace_iterator *iter, char *name,
-			    char *fmt, va_list ap)
+static __printf(3, 0) int trace_output_raw(struct trace_iterator *iter,
+					   char *name, const char *fmt, va_list ap)
 {
 	struct trace_seq *s = &iter->seq;
 
@@ -308,7 +308,7 @@ static int trace_output_raw(struct trace_iterator *iter, char *name,
 	return trace_handle_return(s);
 }
 
-int trace_output_call(struct trace_iterator *iter, char *name, char *fmt, ...)
+int trace_output_call(struct trace_iterator *iter, char *name, const char *fmt, ...)
 {
 	va_list ap;
 	int ret;
diff --git a/net/dccp/ccid.c b/net/dccp/ccid.c
index 90f77d08cc37..f39d321c8af2 100644
--- a/net/dccp/ccid.c
+++ b/net/dccp/ccid.c
@@ -79,7 +79,8 @@ int ccid_getsockopt_builtin_ccids(struct sock *sk, int len,
 	return err;
 }
 
-static struct kmem_cache *ccid_kmem_cache_create(int obj_size, char *slab_name_fmt, const char *fmt,...)
+static __printf(3, 4)
+struct kmem_cache *ccid_kmem_cache_create(int obj_size, char *slab_name_fmt, const char *fmt,...)
 {
 	struct kmem_cache *slab;
 	va_list args;
diff --git a/net/tipc/netlink_compat.c b/net/tipc/netlink_compat.c
index 4ad3586da8f0..29ec3c81c9bd 100644
--- a/net/tipc/netlink_compat.c
+++ b/net/tipc/netlink_compat.c
@@ -117,7 +117,7 @@ static void tipc_tlv_init(struct sk_buff *skb, u16 type)
 	skb_put(skb, sizeof(struct tlv_desc));
 }
 
-static int tipc_tlv_sprintf(struct sk_buff *skb, const char *fmt, ...)
+static __printf(2, 3) int tipc_tlv_sprintf(struct sk_buff *skb, const char *fmt, ...)
 {
 	int n;
 	u16 len;
diff --git a/scripts/mod/modpost.h b/scripts/mod/modpost.h
index 8453d6ac2f77..7aecdcc1d224 100644
--- a/scripts/mod/modpost.h
+++ b/scripts/mod/modpost.h
@@ -189,6 +189,6 @@ void *grab_file(const char *filename, unsigned long *size);
 char* get_next_line(unsigned long *pos, void *file, unsigned long size);
 void release_file(void *file, unsigned long size);
 
-void fatal(const char *fmt, ...);
-void warn(const char *fmt, ...);
-void merror(const char *fmt, ...);
+void fatal(const char *fmt, ...) __attribute__((format(printf, 1, 2)));
+void warn(const char *fmt, ...) __attribute__((format(printf, 1, 2)));
+void merror(const char *fmt, ...) __attribute__((format(printf, 1, 2)));
diff --git a/scripts/unifdef.c b/scripts/unifdef.c
index db00e3e30a59..67d4e1b13f3d 100644
--- a/scripts/unifdef.c
+++ b/scripts/unifdef.c
@@ -1200,7 +1200,7 @@ strlcmp(const char *s, const char *t, size_t n)
 /*
  * Diagnostics.
  */
-static void
+static __attribute__ ((format(printf, 1, 2))) void
 debug(const char *msg, ...)
 {
 	va_list ap;
diff --git a/security/tomoyo/common.c b/security/tomoyo/common.c
index c598aa00d5e3..d493f384e287 100644
--- a/security/tomoyo/common.c
+++ b/security/tomoyo/common.c
@@ -193,7 +193,8 @@ const char *tomoyo_yesno(const unsigned int value)
  *
  * Returns nothing.
  */
-static void tomoyo_addprintf(char *buffer, int len, const char *fmt, ...)
+static __printf(3, 4)
+void tomoyo_addprintf(char *buffer, int len, const char *fmt, ...)
 {
 	va_list args;
 	const int pos = strlen(buffer);
diff --git a/security/tomoyo/common.h b/security/tomoyo/common.h
index 539bcdd30bb8..ff941ebf346d 100644
--- a/security/tomoyo/common.h
+++ b/security/tomoyo/common.h
@@ -944,7 +944,7 @@ bool tomoyo_str_starts(char **src, const char *find);
 char *tomoyo_encode(const char *str);
 char *tomoyo_encode2(const char *str, int str_len);
 char *tomoyo_init_log(struct tomoyo_request_info *r, int len, const char *fmt,
-		      va_list args);
+		      va_list args) __printf(3, 0);
 char *tomoyo_read_token(struct tomoyo_acl_param *param);
 char *tomoyo_realpath_from_path(const struct path *path);
 char *tomoyo_realpath_nofollow(const char *pathname);
@@ -1057,7 +1057,7 @@ void tomoyo_warn_oom(const char *function);
 void tomoyo_write_log(struct tomoyo_request_info *r, const char *fmt, ...)
 	__printf(2, 3);
 void tomoyo_write_log2(struct tomoyo_request_info *r, int len, const char *fmt,
-		       va_list args);
+		       va_list args) __printf(3, 0);
 
 /********** External variable definitions. **********/
 
diff --git a/sound/soc/soc-dapm.c b/sound/soc/soc-dapm.c
index a5178845065b..ecfa150e36cb 100644
--- a/sound/soc/soc-dapm.c
+++ b/sound/soc/soc-dapm.c
@@ -133,7 +133,8 @@ static void pop_wait(u32 pop_time)
 		schedule_timeout_uninterruptible(msecs_to_jiffies(pop_time));
 }
 
-static void pop_dbg(struct device *dev, u32 pop_time, const char *fmt, ...)
+static __printf(3, 4) void pop_dbg(struct device *dev, u32 pop_time,
+				   const char *fmt, ...)
 {
 	va_list args;
 	char *buf;
-- 
