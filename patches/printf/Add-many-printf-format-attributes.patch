From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Nicolas Iooss <nicolas.iooss_linux@m4x.org>
Date: Sun, 28 Jun 2015 15:24:06 +0800
Subject: [PATCH] {PRINTF} Add many printf format attributes

---
 arch/x86/boot/tools/build.c        |  3 ++-
 drivers/acpi/acpica/nsrepair2.c    |  2 +-
 drivers/clk/clkdev.c               |  7 ++++---
 drivers/isdn/capi/capiutil.c       |  4 ++--
 drivers/pnp/interface.c            |  2 +-
 drivers/scsi/BusLogic.c            |  6 +++---
 drivers/scsi/esas2r/esas2r_log.c   |  8 ++++----
 drivers/staging/fbtft/fbtft.h      |  2 +-
 drivers/xen/xenbus/xenbus_client.c | 10 ++++++----
 include/acpi/acpiosxf.h            |  2 +-
 include/linux/trace_events.h       |  3 ++-
 kernel/audit.c                     |  4 ++--
 kernel/trace/trace.h               |  6 +++---
 kernel/trace/trace_output.c        |  6 +++---
 net/dccp/ccid.c                    |  3 ++-
 net/tipc/netlink_compat.c          |  2 +-
 scripts/mod/modpost.h              |  2 +-
 scripts/unifdef.c                  |  2 +-
 security/tomoyo/common.c           |  3 ++-
 security/tomoyo/common.h           |  4 ++--
 20 files changed, 44 insertions(+), 37 deletions(-)

diff --git a/arch/x86/boot/tools/build.c b/arch/x86/boot/tools/build.c
index a3725ad46c5a..04616745d029 100644
--- a/arch/x86/boot/tools/build.c
+++ b/arch/x86/boot/tools/build.c
@@ -137,7 +137,8 @@ static u32 partial_crc32(const u8 *s, int len, u32 crc)
 	return crc;
 }
 
-static void die(const char * str, ...)
+static __attribute__ ((format(printf, 1, 2)))
+void die(const char * str, ...)
 {
 	va_list args;
 	va_start(args, str);
diff --git a/drivers/acpi/acpica/nsrepair2.c b/drivers/acpi/acpica/nsrepair2.c
index 125143c41bb8..3449c2317696 100644
--- a/drivers/acpi/acpica/nsrepair2.c
+++ b/drivers/acpi/acpica/nsrepair2.c
@@ -271,7 +271,7 @@ acpi_ns_repair_FDE(struct acpi_evaluate_info *info,
 			ACPI_WARN_PREDEFINED((AE_INFO,
 					      info->full_pathname,
 					      info->node_flags,
-					      "Incorrect return buffer length %u, expected %u",
+					      "Incorrect return buffer length %u, expected %zu",
 					      return_object->buffer.length,
 					      ACPI_FDE_DWORD_BUFFER_SIZE));
 
diff --git a/drivers/clk/clkdev.c b/drivers/clk/clkdev.c
index 0f2e3fcf0f19..4dfcf9de41f8 100644
--- a/drivers/clk/clkdev.c
+++ b/drivers/clk/clkdev.c
@@ -153,7 +153,7 @@ struct clk_lookup_alloc {
 	char	con_id[MAX_CON_ID];
 };
 
-static struct clk_lookup * __ref
+static __printf(3, 0) struct clk_lookup * __ref
 vclkdev_alloc(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	va_list ap)
 {
@@ -177,7 +177,7 @@ vclkdev_alloc(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	return &cla->cl;
 }
 
-static struct clk_lookup *
+static __printf(3, 0) struct clk_lookup *
 vclkdev_create(struct clk_hw *hw, const char *con_id, const char *dev_fmt,
 	va_list ap)
 {
@@ -293,7 +293,8 @@ void clkdev_drop(struct clk_lookup *cl)
 }
 EXPORT_SYMBOL(clkdev_drop);
 
-static struct clk_lookup *__clk_register_clkdev(struct clk_hw *hw,
+static __printf(3, 4) struct clk_lookup *
+__clk_register_clkdev(struct clk_hw *hw,
 						const char *con_id,
 						const char *dev_id, ...)
 {
diff --git a/drivers/isdn/capi/capiutil.c b/drivers/isdn/capi/capiutil.c
index f26bf3c66d7e..94d7ce148a81 100644
--- a/drivers/isdn/capi/capiutil.c
+++ b/drivers/isdn/capi/capiutil.c
@@ -382,7 +382,7 @@ static char *pnames[] =
 #include <stdarg.h>
 
 /*-------------------------------------------------------*/
-static _cdebbuf *bufprint(_cdebbuf *cdb, char *fmt, ...)
+static __printf(2, 3) _cdebbuf *bufprint(_cdebbuf *cdb, char *fmt, ...)
 {
 	va_list f;
 	size_t n, r;
@@ -488,7 +488,7 @@ static _cdebbuf *protocol_message_2_pars(_cdebbuf *cdb, _cmsg *cmsg, int level)
 			cmsg->l += 2;
 			break;
 		case _CDWORD:
-			cdb = bufprint(cdb, "%-*s = 0x%lx\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));
+			cdb = bufprint(cdb, "%-*s = 0x%x\n", slen, NAME, *(u32 *) (cmsg->m + cmsg->l));
 			cmsg->l += 4;
 			break;
 		case _CSTRUCT:
diff --git a/drivers/pnp/interface.c b/drivers/pnp/interface.c
index 187e4a1175b0..553fb28c2d7f 100644
--- a/drivers/pnp/interface.c
+++ b/drivers/pnp/interface.c
@@ -33,7 +33,7 @@ struct pnp_info_buffer {
 
 typedef struct pnp_info_buffer pnp_info_buffer_t;
 
-static int pnp_printf(pnp_info_buffer_t * buffer, char *fmt, ...)
+static __printf(2, 3) int pnp_printf(pnp_info_buffer_t * buffer, char *fmt, ...)
 {
 	va_list args;
 	int res;
diff --git a/drivers/scsi/BusLogic.c b/drivers/scsi/BusLogic.c
index ccb061ab0a0a..0d1d9275979b 100644
--- a/drivers/scsi/BusLogic.c
+++ b/drivers/scsi/BusLogic.c
@@ -1845,7 +1845,7 @@ static bool __init blogic_reportconfig(struct blogic_adapter *adapter)
 		else
 			blogic_info("None, ", adapter);
 		if (adapter->bios_addr > 0)
-			blogic_info("BIOS Address: 0x%lX, ", adapter,
+			blogic_info("BIOS Address: 0x%X, ", adapter,
 					adapter->bios_addr);
 		else
 			blogic_info("BIOS Address: None, ", adapter);
@@ -3579,8 +3579,8 @@ Target	Requested Completed  Requested Completed  Requested Completed\n\
   blogic_msg prints Driver Messages.
 */
 
-static void blogic_msg(enum blogic_msglevel msglevel, char *fmt,
-			struct blogic_adapter *adapter, ...)
+static __printf(2, 4) void blogic_msg(enum blogic_msglevel msglevel, char *fmt,
+				      struct blogic_adapter *adapter, ...)
 {
 	static char buf[BLOGIC_LINEBUF_SIZE];
 	static bool begin = true;
diff --git a/drivers/scsi/esas2r/esas2r_log.c b/drivers/scsi/esas2r/esas2r_log.c
index b545798e400c..83614c103df6 100644
--- a/drivers/scsi/esas2r/esas2r_log.c
+++ b/drivers/scsi/esas2r/esas2r_log.c
@@ -113,10 +113,10 @@ static const char *translate_esas2r_event_level_to_kernel(const long level)
  *
  * @return 0 on success, or -1 if an error occurred.
  */
-static int esas2r_log_master(const long level,
-			     const struct device *dev,
-			     const char *format,
-			     va_list args)
+static __printf(3, 0) int esas2r_log_master(const long level,
+					    const struct device *dev,
+					    const char *format,
+					    va_list args)
 {
 	if (level <= event_log_level) {
 		unsigned long flags = 0;
diff --git a/drivers/staging/fbtft/fbtft.h b/drivers/staging/fbtft/fbtft.h
index 76f8c090a837..ba4fd1a98325 100644
--- a/drivers/staging/fbtft/fbtft.h
+++ b/drivers/staging/fbtft/fbtft.h
@@ -240,7 +240,7 @@ struct fbtft_par {
 int fbtft_write_buf_dc(struct fbtft_par *par, void *buf, size_t len, int dc);
 __printf(5, 6)
 void fbtft_dbg_hex(const struct device *dev, int groupsize,
-		   void *buf, size_t len, const char *fmt, ...);
+		   void *buf, size_t len, const char *fmt, ...) __printf(5, 6);
 struct fb_info *fbtft_framebuffer_alloc(struct fbtft_display *display,
 					struct device *dev,
 					struct fbtft_platform_data *pdata);
diff --git a/drivers/xen/xenbus/xenbus_client.c b/drivers/xen/xenbus/xenbus_client.c
index fd80e318b99c..961984f7dec7 100644
--- a/drivers/xen/xenbus/xenbus_client.c
+++ b/drivers/xen/xenbus/xenbus_client.c
@@ -272,8 +272,9 @@ int xenbus_frontend_closed(struct xenbus_device *dev)
 }
 EXPORT_SYMBOL_GPL(xenbus_frontend_closed);
 
-static void xenbus_va_dev_error(struct xenbus_device *dev, int err,
-				const char *fmt, va_list ap)
+static __printf(3, 0)
+void xenbus_va_dev_error(struct xenbus_device *dev, int err,
+			 const char *fmt, va_list ap)
 {
 	unsigned int len;
 	char *printf_buffer;
@@ -344,8 +345,9 @@ EXPORT_SYMBOL_GPL(xenbus_dev_fatal);
  * Equivalent to xenbus_dev_fatal(dev, err, fmt, args), but helps
  * avoiding recursion within xenbus_switch_state.
  */
-static void xenbus_switch_fatal(struct xenbus_device *dev, int depth, int err,
-				const char *fmt, ...)
+static __printf(4, 5) void xenbus_switch_fatal(struct xenbus_device *dev,
+					       int depth, int err,
+					       const char *fmt, ...)
 {
 	va_list ap;
 
diff --git a/include/acpi/acpiosxf.h b/include/acpi/acpiosxf.h
index 33bb8c9a089d..96b838924d62 100644
--- a/include/acpi/acpiosxf.h
+++ b/include/acpi/acpiosxf.h
@@ -335,7 +335,7 @@ void ACPI_INTERNAL_VAR_XFACE acpi_os_printf(const char *format, ...);
 #endif
 
 #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_vprintf
-void acpi_os_vprintf(const char *format, va_list args);
+__printf(1, 0) void acpi_os_vprintf(const char *format, va_list args);
 #endif
 
 #ifndef ACPI_USE_ALTERNATE_PROTOTYPE_acpi_os_redirect_output
diff --git a/include/linux/trace_events.h b/include/linux/trace_events.h
index d321fe5ad1a1..a8539752e86c 100644
--- a/include/linux/trace_events.h
+++ b/include/linux/trace_events.h
@@ -170,7 +170,8 @@ void tracing_record_taskinfo_sched_switch(struct task_struct *prev,
 void tracing_record_cmdline(struct task_struct *task);
 void tracing_record_tgid(struct task_struct *task);
 
-int trace_output_call(struct trace_iterator *iter, char *name, char *fmt, ...);
+__printf(3, 4)
+int trace_output_call(struct trace_iterator *iter, char *name, const char *fmt, ...);
 
 struct event_filter;
 
diff --git a/kernel/audit.c b/kernel/audit.c
index 68cee3bc8cfe..02df5a15275e 100644
--- a/kernel/audit.c
+++ b/kernel/audit.c
@@ -1901,8 +1901,8 @@ static inline int audit_expand(struct audit_buffer *ab, int extra)
  * will be called a second time.  Currently, we assume that a printk
  * can't format message larger than 1024 bytes, so we don't either.
  */
-static void audit_log_vformat(struct audit_buffer *ab, const char *fmt,
-			      va_list args)
+static __printf(2, 0) void audit_log_vformat(struct audit_buffer *ab,
+					     const char *fmt, va_list args)
 {
 	int len, avail;
 	struct sk_buff *skb;
diff --git a/kernel/trace/trace.h b/kernel/trace/trace.h
index f3f5e77123ad..fb26bad0cf1b 100644
--- a/kernel/trace/trace.h
+++ b/kernel/trace/trace.h
@@ -905,11 +905,11 @@ extern int trace_selftest_startup_branch(struct tracer *trace,
 
 extern void *head_page(struct trace_array_cpu *data);
 extern unsigned long long ns2usecs(u64 nsec);
-extern int
+extern __printf(2, 0) int
 trace_vbprintk(unsigned long ip, const char *fmt, va_list args);
-extern int
+extern __printf(2, 0) int
 trace_vprintk(unsigned long ip, const char *fmt, va_list args);
-extern int
+extern __printf(3, 0) int
 trace_array_vprintk(struct trace_array *tr,
 		    unsigned long ip, const char *fmt, va_list args);
 int trace_array_printk_buf(struct trace_buffer *buffer,
diff --git a/kernel/trace/trace_output.c b/kernel/trace/trace_output.c
index 000e9dc224c6..acf2f5fcac66 100644
--- a/kernel/trace/trace_output.c
+++ b/kernel/trace/trace_output.c
@@ -312,8 +312,8 @@ int trace_raw_output_prep(struct trace_iterator *iter,
 }
 EXPORT_SYMBOL(trace_raw_output_prep);
 
-static int trace_output_raw(struct trace_iterator *iter, char *name,
-			    char *fmt, va_list ap)
+static __printf(3, 0) int trace_output_raw(struct trace_iterator *iter,
+					   char *name, const char *fmt, va_list ap)
 {
 	struct trace_seq *s = &iter->seq;
 
@@ -323,7 +323,7 @@ static int trace_output_raw(struct trace_iterator *iter, char *name,
 	return trace_handle_return(s);
 }
 
-int trace_output_call(struct trace_iterator *iter, char *name, char *fmt, ...)
+int trace_output_call(struct trace_iterator *iter, char *name, const char *fmt, ...)
 {
 	va_list ap;
 	int ret;
diff --git a/net/dccp/ccid.c b/net/dccp/ccid.c
index 1e9bb121ba72..e265a1c5e1ea 100644
--- a/net/dccp/ccid.c
+++ b/net/dccp/ccid.c
@@ -76,7 +76,8 @@ int ccid_getsockopt_builtin_ccids(struct sock *sk, int len,
 	return err;
 }
 
-static struct kmem_cache *ccid_kmem_cache_create(int obj_size, char *slab_name_fmt, const char *fmt,...)
+static __printf(3, 4)
+struct kmem_cache *ccid_kmem_cache_create(int obj_size, char *slab_name_fmt, const char *fmt,...)
 {
 	struct kmem_cache *slab;
 	va_list args;
diff --git a/net/tipc/netlink_compat.c b/net/tipc/netlink_compat.c
index 1c7aa51cc2a3..7a3d456f3948 100644
--- a/net/tipc/netlink_compat.c
+++ b/net/tipc/netlink_compat.c
@@ -118,7 +118,7 @@ static void tipc_tlv_init(struct sk_buff *skb, u16 type)
 	skb_put(skb, sizeof(struct tlv_desc));
 }
 
-static int tipc_tlv_sprintf(struct sk_buff *skb, const char *fmt, ...)
+static __printf(2, 3) int tipc_tlv_sprintf(struct sk_buff *skb, const char *fmt, ...)
 {
 	int n;
 	u16 len;
diff --git a/scripts/mod/modpost.h b/scripts/mod/modpost.h
index 3aa052722233..f510c8497be0 100644
--- a/scripts/mod/modpost.h
+++ b/scripts/mod/modpost.h
@@ -199,7 +199,7 @@ enum loglevel {
 	LOG_FATAL
 };
 
-void modpost_log(enum loglevel loglevel, const char *fmt, ...);
+void modpost_log(enum loglevel loglevel, const char *fmt, ...) __attribute__((format(printf, 2, 3)));
 
 #define warn(fmt, args...)	modpost_log(LOG_WARN, fmt, ##args)
 #define merror(fmt, args...)	modpost_log(LOG_ERROR, fmt, ##args)
diff --git a/scripts/unifdef.c b/scripts/unifdef.c
index db00e3e30a59..67d4e1b13f3d 100644
--- a/scripts/unifdef.c
+++ b/scripts/unifdef.c
@@ -1200,7 +1200,7 @@ strlcmp(const char *s, const char *t, size_t n)
 /*
  * Diagnostics.
  */
-static void
+static __attribute__ ((format(printf, 1, 2))) void
 debug(const char *msg, ...)
 {
 	va_list ap;
diff --git a/security/tomoyo/common.c b/security/tomoyo/common.c
index 4bee32bfe16d..3fe132de5a14 100644
--- a/security/tomoyo/common.c
+++ b/security/tomoyo/common.c
@@ -193,7 +193,8 @@ const char *tomoyo_yesno(const unsigned int value)
  *
  * Returns nothing.
  */
-static void tomoyo_addprintf(char *buffer, int len, const char *fmt, ...)
+static __printf(3, 4)
+void tomoyo_addprintf(char *buffer, int len, const char *fmt, ...)
 {
 	va_list args;
 	const int pos = strlen(buffer);
diff --git a/security/tomoyo/common.h b/security/tomoyo/common.h
index 85246b9df7ca..c77bc210e57b 100644
--- a/security/tomoyo/common.h
+++ b/security/tomoyo/common.h
@@ -954,7 +954,7 @@ bool tomoyo_str_starts(char **src, const char *find);
 char *tomoyo_encode(const char *str);
 char *tomoyo_encode2(const char *str, int str_len);
 char *tomoyo_init_log(struct tomoyo_request_info *r, int len, const char *fmt,
-		      va_list args);
+		      va_list args) __printf(3, 0);
 char *tomoyo_read_token(struct tomoyo_acl_param *param);
 char *tomoyo_realpath_from_path(const struct path *path);
 char *tomoyo_realpath_nofollow(const char *pathname);
@@ -1068,7 +1068,7 @@ void tomoyo_warn_oom(const char *function);
 void tomoyo_write_log(struct tomoyo_request_info *r, const char *fmt, ...)
 	__printf(2, 3);
 void tomoyo_write_log2(struct tomoyo_request_info *r, int len, const char *fmt,
-		       va_list args);
+		       va_list args) __printf(3, 0);
 
 /********** External variable definitions. **********/
 
-- 
